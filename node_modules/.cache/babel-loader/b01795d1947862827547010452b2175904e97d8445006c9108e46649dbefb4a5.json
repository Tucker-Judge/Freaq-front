{"ast":null,"code":"var _jsxFileName = \"/Users/tudge/Development/phase-5/freaq-front/src/Components/LanguagePicker.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LanguagePicker(_ref) {\n  _s();\n  let {\n    material\n  } = _ref;\n  const navigate = useNavigate();\n  // the users languages\n  // i want all languages displayed\n  // a continue where you left off\n  // const [userLanguages, setUserLanguages] = useState([])\n  // useEffect(() => {\n\n  //     const fetchData = async() => {\n  //       try {\n  //         const response = await fetch('/languages');\n  //         console.log(response)\n  //         const data = await response.json();\n  //         console.log(data)\n  //         setUserLanguages(data);\n  //         console.log(userLanguages);\n  //       } catch (error) {\n  //         console.error(error);\n  //       }\n  //     };\n  //     fetchData();\n\n  //   }, [userLanguages]);\n  // useEffect(() => {\n\n  //     fetch('http://localhost:3000/languages')\n  //       .then((res) => {\n  //         console.log(res.json)\n  //         if (res.ok) {\n  //           res.json().then((data) => setUserLanguages(data))\n  //         } \n  //         else {\n  //           setUserLanguages(null);\n\n  //         }\n  //       });\n  //   }, []);\n  // useEffect(() => {\n  //     const fetchData = async () => {\n  //       try {\n  //         const response = await fetch('/languages');\n  //         if (!response.ok) {\n  //           throw new Error(`HTTP error! Status: ${response.status}`);\n  //         }\n  //         const data = await response.json();\n  //         setUserLanguages(data);\n  //         console.log(data);\n  //       } catch (error) {\n  //         console.error('Error fetching data:', error);\n  //       }\n  //     };\n  //     fetchData();\n  //   }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [material.map(language => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => navigate(\"/courses\"),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: language.language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" I told you so seb\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, language.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/continue'),\n      children: \"Continue where you left off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(LanguagePicker, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = LanguagePicker;\nexport default LanguagePicker;\nvar _c;\n$RefreshReg$(_c, \"LanguagePicker\");","map":{"version":3,"names":["useNavigate","useState","useEffect","jsxDEV","_jsxDEV","LanguagePicker","_ref","_s","material","navigate","children","map","language","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/tudge/Development/phase-5/freaq-front/src/Components/LanguagePicker.js"],"sourcesContent":["import {useNavigate} from 'react-router-dom'\nimport {useState, useEffect} from 'react'\nfunction LanguagePicker({material}){\nconst navigate = useNavigate()\n// the users languages\n// i want all languages displayed\n// a continue where you left off\n// const [userLanguages, setUserLanguages] = useState([])\n// useEffect(() => {\n   \n//     const fetchData = async() => {\n//       try {\n//         const response = await fetch('/languages');\n//         console.log(response)\n//         const data = await response.json();\n//         console.log(data)\n//         setUserLanguages(data);\n//         console.log(userLanguages);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     };\n//     fetchData();\n\n//   }, [userLanguages]);\n// useEffect(() => {\n    \n//     fetch('http://localhost:3000/languages')\n//       .then((res) => {\n//         console.log(res.json)\n//         if (res.ok) {\n//           res.json().then((data) => setUserLanguages(data))\n//         } \n//         else {\n//           setUserLanguages(null);\n        \n//         }\n//       });\n//   }, []);\n// useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetch('/languages');\n//         if (!response.ok) {\n//           throw new Error(`HTTP error! Status: ${response.status}`);\n//         }\n//         const data = await response.json();\n//         setUserLanguages(data);\n//         console.log(data);\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     };\n//     fetchData();\n//   }, []);\n  \n  \n\n\n  return (\n    \n    <div>\n      {material.map((language) => (\n        <div onClick = {() => navigate(\"/courses\")} key={language.id}>\n\n            {/* {console.log(language.languages.charAt(0).toUpperCase())} */}\n          <div>{language.language}</div>\n          {/* <img /> */}\n          <p> I told you so seb</p>\n        </div>\n      ))}\n      <button onClick={() => navigate('/continue')}>Continue where you left off</button>\n    </div>\n  )\n}\n\n\nexport default LanguagePicker;"],"mappings":";;AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACzC,SAASC,cAAcA,CAAAC,IAAA,EAAY;EAAAC,EAAA;EAAA,IAAX;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAClC,MAAMG,QAAQ,GAAGT,WAAW,EAAE;EAC9B;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAKE,oBAEEI,OAAA;IAAAM,QAAA,GACGF,QAAQ,CAACG,GAAG,CAAEC,QAAQ,iBACrBR,OAAA;MAAKS,OAAO,EAAIA,CAAA,KAAMJ,QAAQ,CAAC,UAAU,CAAE;MAAAC,QAAA,gBAGzCN,OAAA;QAAAM,QAAA,EAAME,QAAQ,CAACA;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eAE9Bb,OAAA;QAAAM,QAAA,EAAG;MAAkB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA,GALsBL,QAAQ,CAACM,EAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAO7D,CAAC,eACFb,OAAA;MAAQS,OAAO,EAAEA,CAAA,KAAMJ,QAAQ,CAAC,WAAW,CAAE;MAAAC,QAAA,EAAC;IAA2B;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC9E;AAEV;AAACV,EAAA,CAxEQF,cAAc;EAAA,QACNL,WAAW;AAAA;AAAAmB,EAAA,GADnBd,cAAc;AA2EvB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}