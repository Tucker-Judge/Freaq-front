{"ast":null,"code":"var _jsxFileName = \"/Users/tudge/Development/phase-5/freaq-front/src/Components/LanguagePicker.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LanguagePicker(_ref) {\n  _s();\n  let {\n    user,\n    userLanguages,\n    setUserLanguages\n  } = _ref;\n  const navigate = useNavigate();\n  // the users languages\n  // i want all languages displayed\n  // a continue where you left off\n  // const [userLanguages, setUserLanguages] = useState([])\n  // useEffect(() => {\n\n  //     const fetchData = async() => {\n  //       try {\n  //         const response = await fetch('/languages');\n  //         console.log(response)\n  //         const data = await response.json();\n  //         console.log(data)\n  //         setUserLanguages(data);\n  //         console.log(userLanguages);\n  //       } catch (error) {\n  //         console.error(error);\n  //       }\n  //     };\n  //     fetchData();\n\n  //   }, [userLanguages]);\n  useEffect(() => {\n    // fetch index of languages\n    fetch('/languages').then(res => {\n      console.log(res.json);\n      if (res.ok) {\n        res.json().then(data => setUserLanguages(data));\n        console.log(userLanguages);\n      } else {\n        setUserLanguages(null);\n      }\n    });\n  }, []);\n  // useEffect(() => {\n  //     const fetchData = async () => {\n  //       try {\n  //         const response = await fetch('/languages');\n  //         if (!response.ok) {\n  //           throw new Error(`HTTP error! Status: ${response.status}`);\n  //         }\n  //         const data = await response.json();\n  //         setUserLanguages(data);\n  //         console.log(data);\n  //       } catch (error) {\n  //         console.error('Error fetching data:', error);\n  //       }\n  //     };\n  //     fetchData();\n  //   }, []);\n\n  // post user_id, language_id\n  function handleGroup(lang_id) {\n    fetch(\"/lessons\", {\n      // posting languages user wants to study\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"user_id\": user.id,\n        \"language_id\": lang_id\n      })\n    }).then(req => {\n      if (req.ok) {\n        req.json().then(session => {\n          console.log(session);\n          navigate(\"/\");\n        });\n      } else {\n        req.json().then(session => {\n          console.log(session.error);\n        });\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: userLanguages.map(language => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleGroup(language.id),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: language.language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Flag_of_Germany_%28state%29.svg/350px-Flag_of_Germany_%28state%29.svg.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" I told you so seb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }, this)]\n      }, language.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 3\n  }, this);\n}\n_s(LanguagePicker, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = LanguagePicker;\nexport default LanguagePicker;\nvar _c;\n$RefreshReg$(_c, \"LanguagePicker\");","map":{"version":3,"names":["useNavigate","useEffect","jsxDEV","_jsxDEV","LanguagePicker","_ref","_s","user","userLanguages","setUserLanguages","navigate","fetch","then","res","console","log","json","ok","data","handleGroup","lang_id","method","headers","body","JSON","stringify","id","req","session","error","children","map","language","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","_c","$RefreshReg$"],"sources":["/Users/tudge/Development/phase-5/freaq-front/src/Components/LanguagePicker.js"],"sourcesContent":["import {useNavigate} from 'react-router-dom'\nimport {useEffect} from 'react'\nfunction LanguagePicker({user, userLanguages, setUserLanguages}){\nconst navigate = useNavigate()\n// the users languages\n// i want all languages displayed\n// a continue where you left off\n// const [userLanguages, setUserLanguages] = useState([])\n// useEffect(() => {\n   \n//     const fetchData = async() => {\n//       try {\n//         const response = await fetch('/languages');\n//         console.log(response)\n//         const data = await response.json();\n//         console.log(data)\n//         setUserLanguages(data);\n//         console.log(userLanguages);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     };\n//     fetchData();\n\n//   }, [userLanguages]);\nuseEffect(() => {\n    // fetch index of languages\n    fetch('/languages')\n      .then((res) => {\n        console.log(res.json)\n        if (res.ok) {\n          res.json().then((data) => setUserLanguages(data))\n          console.log(userLanguages)\n        } \n        else {\n          setUserLanguages(null);\n        }\n      });\n  }, []);\n// useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetch('/languages');\n//         if (!response.ok) {\n//           throw new Error(`HTTP error! Status: ${response.status}`);\n//         }\n//         const data = await response.json();\n//         setUserLanguages(data);\n//         console.log(data);\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     };\n//     fetchData();\n//   }, []);\n  \n  \n\n// post user_id, language_id\nfunction handleGroup(lang_id){\n  fetch(\"/lessons\",{\n    // posting languages user wants to study\n      method: 'POST',\n      headers: {\n          'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n          \"user_id\": user.id,\n          \"language_id\": lang_id,\n          \n      })\n  })\n  .then(req => {\n      if(req.ok){\n          req.json().then((session) => {\n            \n              console.log(session)\n              navigate(\"/\")\n          })\n      }\n      else{\n          req.json().then((session) => {\n              console.log(session.error)\n          })\n      }\n  })\n}\n\nreturn (\n  <div >\n {userLanguages.map((language) => {\n    return (\n    <div onClick = {() => handleGroup(language.id)} key={language.id}>\n        \n       \n        {/* {console.log(language.languages.charAt(0).toUpperCase())} */}\n      <div>{language.language}</div>\n      <img src = \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Flag_of_Germany_%28state%29.svg/350px-Flag_of_Germany_%28state%29.svg.png\"/>\n      <p> I told you so seb</p>\n    </div>\n        )\n})}\n      {/* <button onClick={() => navigate('/continue')}>Continue where you left off</button> */}\n    {/* continue to study session after previous */}\n    </div>\n  )\n}\n\n\nexport default LanguagePicker;"],"mappings":";;AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC/B,SAASC,cAAcA,CAAAC,IAAA,EAAyC;EAAAC,EAAA;EAAA,IAAxC;IAACC,IAAI;IAAEC,aAAa;IAAEC;EAAgB,CAAC,GAAAJ,IAAA;EAC/D,MAAMK,QAAQ,GAAGV,WAAW,EAAE;EAC9B;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACAC,SAAS,CAAC,MAAM;IACZ;IACAU,KAAK,CAAC,YAAY,CAAC,CAChBC,IAAI,CAAEC,GAAG,IAAK;MACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC;MACrB,IAAIH,GAAG,CAACI,EAAE,EAAE;QACVJ,GAAG,CAACG,IAAI,EAAE,CAACJ,IAAI,CAAEM,IAAI,IAAKT,gBAAgB,CAACS,IAAI,CAAC,CAAC;QACjDJ,OAAO,CAACC,GAAG,CAACP,aAAa,CAAC;MAC5B,CAAC,MACI;QACHC,gBAAgB,CAAC,IAAI,CAAC;MACxB;IACF,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACR;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAIA;EACA,SAASU,WAAWA,CAACC,OAAO,EAAC;IAC3BT,KAAK,CAAC,UAAU,EAAC;MACf;MACEU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjB,SAAS,EAAElB,IAAI,CAACmB,EAAE;QAClB,aAAa,EAAEN;MAEnB,CAAC;IACL,CAAC,CAAC,CACDR,IAAI,CAACe,GAAG,IAAI;MACT,IAAGA,GAAG,CAACV,EAAE,EAAC;QACNU,GAAG,CAACX,IAAI,EAAE,CAACJ,IAAI,CAAEgB,OAAO,IAAK;UAEzBd,OAAO,CAACC,GAAG,CAACa,OAAO,CAAC;UACpBlB,QAAQ,CAAC,GAAG,CAAC;QACjB,CAAC,CAAC;MACN,CAAC,MACG;QACAiB,GAAG,CAACX,IAAI,EAAE,CAACJ,IAAI,CAAEgB,OAAO,IAAK;UACzBd,OAAO,CAACC,GAAG,CAACa,OAAO,CAACC,KAAK,CAAC;QAC9B,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EACJ;EAEA,oBACE1B,OAAA;IAAA2B,QAAA,EACAtB,aAAa,CAACuB,GAAG,CAAEC,QAAQ,IAAK;MAC9B,oBACA7B,OAAA;QAAK8B,OAAO,EAAIA,CAAA,KAAMd,WAAW,CAACa,QAAQ,CAACN,EAAE,CAAE;QAAAI,QAAA,gBAI7C3B,OAAA;UAAA2B,QAAA,EAAME,QAAQ,CAACA;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,eAC9BlC,OAAA;UAAKmC,GAAG,EAAG;QAAqI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eAClJlC,OAAA;UAAA2B,QAAA,EAAG;QAAkB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;MAAA,GAN0BL,QAAQ,CAACN,EAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAO1D;IAEV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAGQ;AAEV;AAAC/B,EAAA,CAxGQF,cAAc;EAAA,QACNJ,WAAW;AAAA;AAAAuC,EAAA,GADnBnC,cAAc;AA2GvB,eAAeA,cAAc;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}