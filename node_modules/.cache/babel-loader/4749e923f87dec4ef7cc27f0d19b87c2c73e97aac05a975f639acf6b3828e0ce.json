{"ast":null,"code":"var _jsxFileName = \"/Users/tudge/Development/phase-5/freaq-front-git/src/Components/FlashcardSet.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FlashcardSet(_ref) {\n  _s();\n  let {\n    selectedSet,\n    languageApp,\n    user\n  } = _ref;\n  const navigate = useNavigate(\"\");\n  const [newCards, setNewCards] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [count, setCount] = useState(0);\n  const [index, setIndex] = useState(0);\n  const [timerStart, setTimerStart] = useState(10);\n  const [timerEnd, setTimerEnd] = useState(0);\n  const [speechInput, setSpeechInput] = useState(\"\");\n  const {\n    transcript,\n    // resetTranscript,\n    listening,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition(\n    // Pass in the language configuration object\n  );\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"no... just get off whatever browser you are on it doesnt have support for literally anything\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n  function inputValueChanged(e) {\n    let cards = newCards.length > 0 ? newCards[index].flashcard.front : selectedSet[index].flashcard.front;\n    e.preventDefault();\n    if (e.target.value === cards) {\n      setCount(count + 1);\n      setInput('');\n    } else {\n      setInput(e.target.value);\n    }\n  }\n  useEffect(() => {\n    console.log(\"fucking hell\");\n    if (count === 1) {\n      textSynthesis();\n    }\n    if (count === 2) {\n      const clear = setInterval(() => {\n        // handleSpeechRecognition()\n        if (transcript.includes(selectedSet[index].flashcard.front)) {\n          SpeechRecognition.stopListening();\n          clearInterval(clear);\n          setIndex(index + 1);\n          setCount(0);\n          setTimerStart(10);\n          console.log(\"genius\");\n        }\n      }, 1000);\n    }\n  }, [count, transcript]);\n  // useEffect(() => {\n  //   handleSpeechRecognition(selectedSet[index].flashcard.front)\n  // }, [transcript])\n  // text synthesis function\n  function textSynthesis() {\n    const synth = window.speechSynthesis;\n    const utterance = new SpeechSynthesisUtterance(selectedSet[index].flashcard.front);\n    utterance.lang = newCards[index].flashcard.one_back_key;\n    utterance.addEventListener(\"end\", () => {\n      synth.cancel();\n    });\n    let interval = setInterval(() => {\n      setTimerStart(prevTimerStart => {\n        const newTimerStart = prevTimerStart - 1;\n        if (newTimerStart === 3 || newTimerStart === 8) {\n          synth.speak(utterance);\n        }\n        if (newTimerStart <= 0) {\n          clearInterval(interval);\n          setCount(2);\n        }\n        return newTimerStart;\n      });\n    }, 500);\n  }\n  // function speechSynthesis(){\n  //   const recognition = new SpeechRecognition()\n  //   const grammarList = new SpeechGrammarList()\n  //       recognition.lang = user.lang_code;\n  //       recognition.interimResults = false;\n  //       recognition.maxAlternatives = 1;\n  //       recognition.grammars = grammarList\n  //       recognition.start();\n\n  //       recognition.onresult = function(event) {\n  //         const speechResult = event.results[0][0].transcript.trim();\n  //         setSpeechInput(speechResult);\n  //         if (speechResult === selectedSet[index].flashcard.front) {\n  //           setCount(count + 1);\n  //           setSpeechInput('');\n  //           recognition.stop();\n  //         }\n  //       }\n  // }\n  //  function handleSpeechRecognition(front) {\n  //   const frontLower = front.toLowerCase();\n  //    (() => {\n  //     debugger;\n  //     console.log(frontLower);\n  //     console.log(transcript);\n  //     if (transcript && transcript.includes(frontLower)) {\n  //       SpeechRecognition.stopListening();\n  //       console.log(transcript);\n  //       setCount(count + 1);\n  //     }\n  //     else {\n  //       console.error(\"idiot alert\")\n  //     }\n  //   })();\n  //   // SpeechRecognition.startListening({ language: \"de-DE\", continuous: true });\n  //   // SpeechRecognition.onend = () => resultHandler();\n  //   // recognition.onerror = () => resetTranscript();\n  // }\n\n  //    const whateva = () => {\n  //     while (listening) {\n  //     handleSpeechRecognition()\n  //   }\n  // }\n\n  console.log(count);\n  const GameComponent = _ref2 => {\n    let {\n      flashcard\n    } = _ref2;\n    // map through each card\n    // function in map taking in card\n\n    if (count === 0) {\n      // i want to have the card displayed and it must be typed correctly to move on\n      // with accent keyboard below the game\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [flashcard.front, flashcard.one_back, /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => inputValueChanged(e),\n            type: \"text\",\n            value: input,\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 3\n      }, this);\n    } else if (count === 1) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: flashcard.front\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: flashcard.one_back\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }, this);\n    } else if (count == 2) {\n      SpeechRecognition.startListening({\n        language: \"de-DE\"\n      });\n      // handleSpeechRecognition(flashcard.front)\n\n      // whateva()\n      // handleSpeechRecognition()\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Repeat the front of the card:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: transcript\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: flashcard.front\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), listening ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRXb04ZJC0pLpX-xTy0nKZXYGb2QJJEI2Wg5A&usqp=CAU\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" this isnt working i hate it here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 142\n        }, this), listening ? \"hate\" : \"love\", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"i am losingggg it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }, this);\n    }\n  };\n  function handleNext() {\n    const last = newCards[index].flashcard.id || selectedSet[index - 1].flashcard.id;\n    fetch(`/flashcards/${last}`).then(response => response.json()).then(data => setNewCards(data));\n  }\n  if (index === 10) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleNext(),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/languages\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 5\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(GameComponent, {\n        flashcard: newCards.length > 0 ? newCards[index].flashcard : selectedSet[index].flashcard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 3\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n}\n_s(FlashcardSet, \"7Fjw4vJYpu+e4E2w9o1vfpi+pqk=\", false, function () {\n  return [useNavigate, useSpeechRecognition];\n});\n_c = FlashcardSet;\nexport default FlashcardSet;\nvar _c;\n$RefreshReg$(_c, \"FlashcardSet\");","map":{"version":3,"names":["useNavigate","useState","useEffect","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","FlashcardSet","_ref","_s","selectedSet","languageApp","user","navigate","newCards","setNewCards","input","setInput","count","setCount","index","setIndex","timerStart","setTimerStart","timerEnd","setTimerEnd","speechInput","setSpeechInput","transcript","listening","browserSupportsSpeechRecognition","children","fileName","_jsxFileName","lineNumber","columnNumber","inputValueChanged","e","cards","length","flashcard","front","preventDefault","target","value","console","log","textSynthesis","clear","setInterval","includes","stopListening","clearInterval","synth","window","speechSynthesis","utterance","SpeechSynthesisUtterance","lang","one_back_key","addEventListener","cancel","interval","prevTimerStart","newTimerStart","speak","GameComponent","_ref2","className","one_back","onChange","type","autoFocus","startListening","language","src","handleNext","last","id","fetch","then","response","json","data","onClick","_c","$RefreshReg$"],"sources":["/Users/tudge/Development/phase-5/freaq-front-git/src/Components/FlashcardSet.js"],"sourcesContent":["\nimport {useNavigate} from 'react-router-dom'\nimport {useState, useEffect} from 'react'\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nfunction FlashcardSet({ selectedSet, languageApp, user }) {\n  const navigate = useNavigate(\"\")\n  const [newCards, setNewCards] = useState([])\n  const [input, setInput] = useState(\"\")\n  const [count, setCount] = useState(0)\n  const [index, setIndex] = useState(0)\n  const [timerStart, setTimerStart] = useState(10)\n  const [timerEnd, setTimerEnd] = useState(0)\n  const [speechInput, setSpeechInput] = useState(\"\")\n  const {\n    transcript,\n    // resetTranscript,\n    listening,\n    browserSupportsSpeechRecognition, \n    \n\n  } = useSpeechRecognition(\n    // Pass in the language configuration object\n  );\n\n  if (!browserSupportsSpeechRecognition) {\n    return (\n      <div>\n        no... just get off whatever browser you are on it doesnt have support for literally anything\n      </div>\n    )\n  }\n  \n\n \n\n  function inputValueChanged(e) {\n    let cards = newCards.length > 0 ? newCards[index].flashcard.front : selectedSet[index].flashcard.front\n    e.preventDefault()\n    if (e.target.value === cards) {\n      setCount(count + 1);\n      setInput('');\n    } else {\n      setInput(e.target.value);\n    }\n  }\n  useEffect(() => {\n    console.log(\"fucking hell\")\n    if (count === 1) {\n      textSynthesis()\n    }\n    if (count === 2){\n     \n      const clear = setInterval(() => {\n        \n        // handleSpeechRecognition()\n        if (transcript.includes(selectedSet[index].flashcard.front)){\n\n        SpeechRecognition.stopListening()\n        clearInterval(clear)\n         setIndex(index+1)\n         setCount(0)\n         setTimerStart(10)\n          console.log(\"genius\")\n        }\n      },1000)\n    }\n  },[count,transcript])\n  // useEffect(() => {\n  //   handleSpeechRecognition(selectedSet[index].flashcard.front)\n  // }, [transcript])\n  // text synthesis function\n  function textSynthesis() {\n    const synth = window.speechSynthesis;\n    const utterance = new SpeechSynthesisUtterance(selectedSet[index].flashcard.front);\n    utterance.lang = newCards[index].flashcard.one_back_key\n    utterance.addEventListener(\"end\", () => {\n      synth.cancel();\n    });\n    \n    let interval = setInterval(() => {\n      setTimerStart((prevTimerStart) => {\n        const newTimerStart = prevTimerStart - 1;\n        \n        if (newTimerStart === 3 || newTimerStart === 8) {\n          synth.speak(utterance);\n        }\n        \n        if (newTimerStart <= 0) {\n          clearInterval(interval);\n          setCount(2)\n        }\n        \n        return newTimerStart;\n        \n      });\n    }, 500);\n    \n  }\n  // function speechSynthesis(){\n    //   const recognition = new SpeechRecognition()\n    //   const grammarList = new SpeechGrammarList()\n    //       recognition.lang = user.lang_code;\n    //       recognition.interimResults = false;\n    //       recognition.maxAlternatives = 1;\n    //       recognition.grammars = grammarList\n    //       recognition.start();\n    \n    //       recognition.onresult = function(event) {\n      //         const speechResult = event.results[0][0].transcript.trim();\n      //         setSpeechInput(speechResult);\n      //         if (speechResult === selectedSet[index].flashcard.front) {\n        //           setCount(count + 1);\n        //           setSpeechInput('');\n        //           recognition.stop();\n        //         }\n        //       }\n        // }\n        //  function handleSpeechRecognition(front) {\n        //   const frontLower = front.toLowerCase();\n        //    (() => {\n        //     debugger;\n        //     console.log(frontLower);\n        //     console.log(transcript);\n        //     if (transcript && transcript.includes(frontLower)) {\n        //       SpeechRecognition.stopListening();\n        //       console.log(transcript);\n        //       setCount(count + 1);\n        //     }\n        //     else {\n        //       console.error(\"idiot alert\")\n        //     }\n        //   })();\n        //   // SpeechRecognition.startListening({ language: \"de-DE\", continuous: true });\n        //   // SpeechRecognition.onend = () => resultHandler();\n        //   // recognition.onerror = () => resetTranscript();\n        // }\n        \n        \n        \n        \n      //    const whateva = () => {\n      //     while (listening) {\n      //     handleSpeechRecognition()\n      //   }\n      // }\n      \n      console.log(count)\n        const GameComponent = ({flashcard}) => {\n          // map through each card\n          // function in map taking in card\n          \n          \n          \n    if (count === 0){\n// i want to have the card displayed and it must be typed correctly to move on\n// with accent keyboard below the game\nreturn (\n  <div className=\"card-container\">\n    <div className=\"card\">\n      {flashcard.front}\n      {flashcard.one_back}\n      <input onChange={(e) => inputValueChanged(e)} type=\"text\" value={input} autoFocus />\n    </div>\n  </div>\n);\n\n    \n  }\n  else if (count === 1) {\n    return (\n      <div>\n        <p>{flashcard.front }</p>\n        <p>{flashcard.one_back}</p>\n        {/* <button onClick={() => textSynthesis(flashcard.front)}>Again</button> */}\n      </div>\n    );\n  }\n  else if (count == 2) {\n    SpeechRecognition.startListening({language: \"de-DE\"})\n    // handleSpeechRecognition(flashcard.front)\n\n    // whateva()\n    // handleSpeechRecognition()\n    return (\n      <div>\n          \n          <p>Repeat the front of the card:</p>\n          <p>{transcript}</p>\n          <p>{flashcard.front}</p>\n          {listening ? <img src= \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRXb04ZJC0pLpX-xTy0nKZXYGb2QJJEI2Wg5A&usqp=CAU\"  /> : <p> this isnt working i hate it here</p>}\n          {listening ? \"hate\" : \"love\"}\n          <p>i am losingggg it</p>\n        </div>\n      );\n    }\n  \n  }\n function handleNext(){\n  const last = newCards[index].flashcard.id || selectedSet[index-1].flashcard.id\n  fetch(`/flashcards/${last}`)\n      .then((response) => response.json())\n      .then((data) => setNewCards(data));\n }\nif (index === 10) {\n  return (\n    <div>\n      <button onClick={()=> handleNext()}>Next</button>\n    <button onClick={()=> navigate(\"/languages\")}></button>\n    </div>\n  )\n}\n  return (\n    <div>\n           \n  <div key={index}>\n{ <GameComponent flashcard = {newCards.length > 0 ? newCards[index].flashcard : selectedSet[index].flashcard }/>}\n {/* if index is 11 return a next button or an exit button */}\n  </div>\n\n    </div>\n  );\n  \n}\n\nexport default FlashcardSet;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}