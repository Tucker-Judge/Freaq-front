{"ast":null,"code":"var _jsxFileName = \"/Users/tudge/Development/phase-5/freaq-front-git/src/Components/FlashcardSet.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FlashcardSet(_ref) {\n  _s();\n  let {\n    selectedSet,\n    languageApp,\n    user\n  } = _ref;\n  const [input, setInput] = useState(\"\");\n  const [count, setCount] = useState(0);\n  const [index, setIndex] = useState(0);\n  const [timerStart, setTimerStart] = useState(10);\n  const [timerEnd, setTimerEnd] = useState(0);\n  const [speechInput, setSpeechInput] = useState(\"\");\n  function inputValueChanged(e) {\n    e.preventDefault();\n    if (e.target.value === selectedSet[index].flashcard.front) {\n      setCount(count + 1);\n      setInput('');\n    } else {\n      setInput(e.target.value);\n    }\n  }\n  useEffect(() => {\n    if (count === 1) {\n      textSynthesis();\n    } else if (count === 2) {\n      speechSynthesis();\n    }\n  }, [count]);\n  // text synthesis function\n  function textSynthesis() {\n    const synth = window.speechSynthesis;\n    const utterance = new SpeechSynthesisUtterance(selectedSet[index].flashcard.front);\n    utterance.lang = user.lang_code;\n    utterance.addEventListener(\"end\", () => {\n      synth.cancel();\n    });\n    let interval = setInterval(() => {\n      setTimerStart(prevTimerStart => {\n        const newTimerStart = prevTimerStart - 1;\n        if (newTimerStart === 3 || newTimerStart === 8) {\n          synth.speak(utterance);\n        }\n        if (newTimerStart <= 0) {\n          clearInterval(interval);\n          setCount(2);\n        }\n        return newTimerStart;\n      });\n    }, 500);\n  }\n  // function speechSynthesis(){\n  //   const recognition = new SpeechRecognition()\n  //   const grammarList = new SpeechGrammarList()\n  //       recognition.lang = user.lang_code;\n  //       recognition.interimResults = false;\n  //       recognition.maxAlternatives = 1;\n  //       recognition.grammars = grammarList\n  //       recognition.start();\n\n  //       recognition.onresult = function(event) {\n  //         const speechResult = event.results[0][0].transcript.trim();\n  //         setSpeechInput(speechResult);\n  //         if (speechResult === selectedSet[index].flashcard.front) {\n  //           setCount(count + 1);\n  //           setSpeechInput('');\n  //           recognition.stop();\n  //         }\n  //       }\n  // }\n  const {\n    transcript,\n    resetTranscript,\n    listening,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition({\n    // Pass in the language configuration object\n    lang: 'en-US',\n    continous: true\n  });\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"no... just get off whatever browser you are on it doesnt have support for literally anything\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this);\n  }\n  const GameComponent = _ref2 => {\n    let {\n      flashcard\n    } = _ref2;\n    // map through each card\n    // function in map taking in card\n\n    if (count === 0) {\n      // i want to have the card displayed and it must be typed correctly to move on\n      // with accent keyboard below the game\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [flashcard.front, flashcard.one_back, /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => inputValueChanged(e),\n          type: \"text\",\n          value: input,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this);\n    } else if (count === 1) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: flashcard.front\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: flashcard.one_back\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this);\n    } else if (count == 2) {\n      SpeechRecognition.startListening();\n      if (transcript.length > 0) {\n        resetTranscript();\n      }\n      if (transcript = `${flashcard.front}`) {\n        SpeechRecognition.stopListening();\n        setCount(0);\n        if (index = 10) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 11\n          }, this);\n        }\n        setIndex(index + 1);\n        setTimerStart(10);\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Repeat the front of the card:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: flashcard.front\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRXb04ZJC0pLpX-xTy0nKZXYGb2QJJEI2Wg5A&usqp=CAU\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(GameComponent, {\n        flashcard: selectedSet[index].flashcard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 3\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n_s(FlashcardSet, \"cduyZzfHBisLhfceJZRt1/MccoU=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = FlashcardSet;\nexport default FlashcardSet;\nvar _c;\n$RefreshReg$(_c, \"FlashcardSet\");","map":{"version":3,"names":["useState","useEffect","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","FlashcardSet","_ref","_s","selectedSet","languageApp","user","input","setInput","count","setCount","index","setIndex","timerStart","setTimerStart","timerEnd","setTimerEnd","speechInput","setSpeechInput","inputValueChanged","e","preventDefault","target","value","flashcard","front","textSynthesis","speechSynthesis","synth","window","utterance","SpeechSynthesisUtterance","lang","lang_code","addEventListener","cancel","interval","setInterval","prevTimerStart","newTimerStart","speak","clearInterval","transcript","resetTranscript","listening","browserSupportsSpeechRecognition","continous","children","fileName","_jsxFileName","lineNumber","columnNumber","GameComponent","_ref2","one_back","onChange","type","autoFocus","startListening","length","stopListening","src","_c","$RefreshReg$"],"sources":["/Users/tudge/Development/phase-5/freaq-front-git/src/Components/FlashcardSet.js"],"sourcesContent":["\nimport {useState, useEffect} from 'react'\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nfunction FlashcardSet({ selectedSet, languageApp, user }) {\n \n  const [input, setInput] = useState(\"\")\n  const [count, setCount] = useState(0)\n  const [index, setIndex] = useState(0)\n  const [timerStart, setTimerStart] = useState(10)\n  const [timerEnd, setTimerEnd] = useState(0)\n  const [speechInput, setSpeechInput] = useState(\"\")\n \n\n \n\n  function inputValueChanged(e) {\n    e.preventDefault()\n    if (e.target.value === selectedSet[index].flashcard.front) {\n      setCount(count + 1);\n      setInput('');\n    } else {\n      setInput(e.target.value);\n    }\n  }\n  useEffect(() => {\n    if (count === 1) {\n      textSynthesis()\n    }\n    else if (count === 2) {\n      speechSynthesis()\n    }\n  },[count])\n// text synthesis function\nfunction textSynthesis() {\n  const synth = window.speechSynthesis;\n  const utterance = new SpeechSynthesisUtterance(selectedSet[index].flashcard.front);\n  utterance.lang = user.lang_code\n  utterance.addEventListener(\"end\", () => {\n    synth.cancel();\n  });\n\n  let interval = setInterval(() => {\n    setTimerStart((prevTimerStart) => {\n      const newTimerStart = prevTimerStart - 1;\n\n      if (newTimerStart === 3 || newTimerStart === 8) {\n        synth.speak(utterance);\n      }\n\n      if (newTimerStart <= 0) {\n        clearInterval(interval);\n        setCount(2)\n      }\n\n      return newTimerStart;\n\n    });\n  }, 500);\n\n}\n// function speechSynthesis(){\n//   const recognition = new SpeechRecognition()\n//   const grammarList = new SpeechGrammarList()\n//       recognition.lang = user.lang_code;\n//       recognition.interimResults = false;\n//       recognition.maxAlternatives = 1;\n//       recognition.grammars = grammarList\n//       recognition.start();\n\n//       recognition.onresult = function(event) {\n//         const speechResult = event.results[0][0].transcript.trim();\n//         setSpeechInput(speechResult);\n//         if (speechResult === selectedSet[index].flashcard.front) {\n//           setCount(count + 1);\n//           setSpeechInput('');\n//           recognition.stop();\n//         }\n//       }\n// }\nconst {\n  transcript,\n  resetTranscript,\n  listening,\n  browserSupportsSpeechRecognition\n} = useSpeechRecognition({\n  // Pass in the language configuration object\n  lang: 'en-US',\n  continous: true\n});\nif (!browserSupportsSpeechRecognition) {\n  return (\n    <div>\n      no... just get off whatever browser you are on it doesnt have support for literally anything\n    </div>\n  )\n}\n  \n  const GameComponent = ({flashcard}) => {\n  // map through each card\n  // function in map taking in card\n\n\n   \n    if (count === 0){\n// i want to have the card displayed and it must be typed correctly to move on\n// with accent keyboard below the game\n    return (\n      <div>\n      {flashcard.front}\n      {flashcard.one_back}\n      <input onChange = {(e) => inputValueChanged(e)} type=\"text\" value = {input} autoFocus/>\n      </div>\n    )\n    \n  }\n  else if (count === 1) {\n    return (\n      <div>\n        <p>{flashcard.front }</p>\n        <p>{flashcard.one_back}</p>\n        {/* <button onClick={() => textSynthesis(flashcard.front)}>Again</button> */}\n      </div>\n    );\n  }\n  else if (count == 2) {\n    SpeechRecognition.startListening()\n    if (transcript.length > 0){\n      resetTranscript();\n    }\n    if (transcript = `${flashcard.front}`){\n      SpeechRecognition.stopListening()\n      setCount(0);\n\n      if (index = 10){\n        return (\n          <div>\n            <button>\n              Next\n            </button>\n          </div>\n        )\n      }\n      setIndex(index+1);\n      setTimerStart(10)\n    }\n\n      return (\n        <div>\n          \n          <p>Repeat the front of the card:</p>\n          <p>{flashcard.front}</p>\n          <img src= \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRXb04ZJC0pLpX-xTy0nKZXYGb2QJJEI2Wg5A&usqp=CAU\"/>\n        </div>\n      );\n    }\n  \n  }\n \n\n  return (\n    <div>\n           \n  <div key={index}>\n{ <GameComponent flashcard = {selectedSet[index].flashcard }/>}\n \n  </div>\n\n    </div>\n  );\n  \n}\n\nexport default FlashcardSet;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}