{"ast":null,"code":"var _jsxFileName = \"/Users/tudge/Development/phase-5/freaq-front/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Login from './Components/Login';\nimport NavBar from './Components/Navbar';\nimport Signup from './Components/Signup';\n// import Home from './Components/Home';\nimport Footer from './Components/Footer';\nimport LanguagePicker from './Components/LanguagePicker';\nimport Course from './Components/Course';\nimport AboutUs from './Components/AboutUs';\nimport Flashcard from './Components/Flashcard';\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [languageApp, setLanguageApp] = useState(\"en-US\");\n  const [user, setUser] = useState(null);\n\n  // setting \n  // const [language]\n  // fetch user then set a language state to the primary language of the app\n\n  // useEffect(() => {\n  //   // Set the language state to the user's browser language\n  // }, []);\n  // let userLang = navigator.language || navigator.userLanguage;\n  // user ? (setLanguageApp(user.language) : setLanguageApp(userLang))\n  useEffect(() => {\n    let userLang = navigator.language || navigator.userLanguage;\n    if (user && user.language) {\n      setLanguageApp(user.language);\n    } else {\n      setLanguageApp(userLang);\n    }\n  }, [user]);\n  // to implement this\n  // \n  // i want them divisible by 10\n  // display languages state\n  // display join table titles state display titles like 1000 frequency words state\n  // display flashcard titles + 10 state\n  // cover_info first card\n  // map through on first pass hear it and spell it\n  // map through second pass hear it spell it without seeing it\n  // map through third pass speak it\n\n  // what is a flashcard title for each ten so doesnt effect the table\n  // in one case i want a count\n  // in another i want specific titles\n  // adjectives - count\n  // nouns - count\n  // sentence structure\n\n  const [userLanguages, setUserLanguages] = useState([]);\n  // post user languages into lesson\n  // fetch from lesson instead\n  const [languageTitles, setLanguageTitles] = useState([]);\n  // useEffect(() => {\n\n  //     fetch('http://localhost:3000/languages')\n  //       .then((res) => {\n  //         console.log(res.json)\n  //         if (res.ok) {\n  //           res.json().then((data) => setUserLanguages(data))\n  //         } \n  //         else {\n  //           setUserLanguages(null);\n  //         }\n  //       });\n  //   }, []);\n\n  const router = createBrowserRouter([{\n    path: \"/*\",\n    element: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"404 not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 16\n    }, this)\n  }, {\n    path: \"/login\",\n    element: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, {\n    path: \"/\",\n    // element: <Home user={user}/>\n    element: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Course, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  },\n  // {\n  //   path: \"/AddLanguages\",\n  //   element: <Languages />\n  // },\n  {\n    path: \"/languages\",\n    element: /*#__PURE__*/_jsxDEV(LanguagePicker, {\n      user: user,\n      userLanguages: userLanguages,\n      setUserLanguages: setUserLanguages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 18\n    }, this)\n  }, {\n    path: \"/courses\",\n    element: /*#__PURE__*/_jsxDEV(Course, {\n      languageApp: languageApp,\n      userLanguages: userLanguages,\n      setUserLanguages: setUserLanguages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 18\n    }, this)\n  }, {\n    path: \"/flashcards\",\n    element: /*#__PURE__*/_jsxDEV(Flashcard, {\n      userLanguages: userLanguages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 18\n    }, this)\n  }]);\n\n  //gets current language\n  //return whatever the route is on\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [user ? /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"about-us\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AboutUs, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Footer, {\n        languageApp: languageApp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"025UI5D0INBUiL34mmM71TdlwlM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Login","NavBar","Signup","Footer","LanguagePicker","Course","AboutUs","Flashcard","createBrowserRouter","RouterProvider","useState","useEffect","jsxDEV","_jsxDEV","App","_s","languageApp","setLanguageApp","user","setUser","userLang","navigator","language","userLanguage","userLanguages","setUserLanguages","languageTitles","setLanguageTitles","router","path","element","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/tudge/Development/phase-5/freaq-front/src/App.js"],"sourcesContent":["import './App.css';\nimport Login from './Components/Login';\nimport NavBar from './Components/Navbar';\nimport Signup from './Components/Signup';\n// import Home from './Components/Home';\nimport Footer from './Components/Footer';\nimport LanguagePicker from './Components/LanguagePicker';\nimport Course from './Components/Course';\nimport AboutUs from './Components/AboutUs';\nimport Flashcard from './Components/Flashcard';\nimport {\n  createBrowserRouter,\n  RouterProvider,\n} from \"react-router-dom\";\nimport {useState, useEffect} from 'react';\n\n\nfunction App() {\n  const [languageApp, setLanguageApp] = useState(\"en-US\")\n  const [user, setUser] = useState(null)\n\n\n  // setting \n  // const [language]\n  // fetch user then set a language state to the primary language of the app\n\n  // useEffect(() => {\n  //   // Set the language state to the user's browser language\n  // }, []);\n  // let userLang = navigator.language || navigator.userLanguage;\n  // user ? (setLanguageApp(user.language) : setLanguageApp(userLang))\n  useEffect(() => {\n    let userLang = navigator.language || navigator.userLanguage;\n    if (user && user.language) {\n      setLanguageApp(user.language);\n    } else {\n      setLanguageApp(userLang);\n    }\n  }, [user]);\n  // to implement this\n  // \n  // i want them divisible by 10\n  // display languages state\n  // display join table titles state display titles like 1000 frequency words state\n  // display flashcard titles + 10 state\n  // cover_info first card\n  // map through on first pass hear it and spell it\n  // map through second pass hear it spell it without seeing it\n  // map through third pass speak it\n\n// what is a flashcard title for each ten so doesnt effect the table\n// in one case i want a count\n// in another i want specific titles\n// adjectives - count\n// nouns - count\n// sentence structure\n\n\nconst [userLanguages, setUserLanguages] = useState([])\n// post user languages into lesson\n// fetch from lesson instead\nconst [languageTitles, setLanguageTitles] = useState([])\n// useEffect(() => {\n    \n//     fetch('http://localhost:3000/languages')\n//       .then((res) => {\n//         console.log(res.json)\n//         if (res.ok) {\n//           res.json().then((data) => setUserLanguages(data))\n//         } \n//         else {\n//           setUserLanguages(null);\n//         }\n//       });\n//   }, []);\n  \n\n\n\n  const router = createBrowserRouter([\n  \n    {\n      path:\"/*\",\n      element: <h1>404 not found</h1>\n    },\n    {\n      path:\"/login\",\n      element: \n      <div>\n      <NavBar />\n      <Login />\n      </div>\n    },\n    \n    {\n      path: \"/\",\n      // element: <Home user={user}/>\n      element: \n      <div>\n        <NavBar />\n        <Course />\n      </div>\n    },\n    // {\n    //   path: \"/AddLanguages\",\n    //   element: <Languages />\n    // },\n      {\n        path: \"/languages\",\n        element: <LanguagePicker user = {user} userLanguages = {userLanguages}  setUserLanguages = {setUserLanguages}/>\n      },\n      {\n        path: \"/courses\",\n        element: <Course languageApp = {languageApp} userLanguages = {userLanguages} setUserLanguages={setUserLanguages}/>\n      },\n      {\n        path: \"/flashcards\",\n        element: <Flashcard userLanguages = {userLanguages}/>\n      }\n  ]);\n  \n  //gets current language\n  //return whatever the route is on\n  return (\n    <div className=\"App\">\n      {/* <NavBar user={user}/> */}\n      {user ? (\n        <RouterProvider router={router} />\n        ):(\n          \n          <div className = \"about-us\">\n          {/* <RouterProvider router={router} /> */}\n        <NavBar user={user} />\n        <AboutUs />\n        <Signup />\n        </div>\n      )} \n      <div>\n\n<Footer languageApp={languageApp}/>\n        </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}