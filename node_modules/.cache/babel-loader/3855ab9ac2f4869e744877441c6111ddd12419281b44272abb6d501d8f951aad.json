{"ast":null,"code":"var _jsxFileName = \"/Users/tudge/Development/phase-5/freaq-front/src/Components/LanguagePicker.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LanguagePicker(_ref) {\n  _s();\n  let {\n    userLanguages,\n    setUserLanguages\n  } = _ref;\n  const navigate = useNavigate();\n  // the users languages\n  // i want all languages displayed\n  // a continue where you left off\n  // const [userLanguages, setUserLanguages] = useState([])\n  // useEffect(() => {\n\n  //     const fetchData = async() => {\n  //       try {\n  //         const response = await fetch('/languages');\n  //         console.log(response)\n  //         const data = await response.json();\n  //         console.log(data)\n  //         setUserLanguages(data);\n  //         console.log(userLanguages);\n  //       } catch (error) {\n  //         console.error(error);\n  //       }\n  //     };\n  //     fetchData();\n\n  //   }, [userLanguages]);\n  useEffect(() => {\n    fetch('http://localhost:3000/languages').then(res => {\n      console.log(res.json);\n      if (res.ok) {\n        res.json().then(data => setUserLanguages(data));\n      } else {\n        setUserLanguages(null);\n      }\n    });\n  }, []);\n  // useEffect(() => {\n  //     const fetchData = async () => {\n  //       try {\n  //         const response = await fetch('/languages');\n  //         if (!response.ok) {\n  //           throw new Error(`HTTP error! Status: ${response.status}`);\n  //         }\n  //         const data = await response.json();\n  //         setUserLanguages(data);\n  //         console.log(data);\n  //       } catch (error) {\n  //         console.error('Error fetching data:', error);\n  //       }\n  //     };\n  //     fetchData();\n  //   }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: userLanguages.map(language => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => navigate(\"/flashcards\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: language.language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Flag_of_Germany_%28state%29.svg/350px-Flag_of_Germany_%28state%29.svg.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" I told you so seb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, language.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(LanguagePicker, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = LanguagePicker;\nexport default LanguagePicker;\nvar _c;\n$RefreshReg$(_c, \"LanguagePicker\");","map":{"version":3,"names":["useNavigate","useState","useEffect","jsxDEV","_jsxDEV","LanguagePicker","_ref","_s","userLanguages","setUserLanguages","navigate","fetch","then","res","console","log","json","ok","data","children","map","language","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","id","_c","$RefreshReg$"],"sources":["/Users/tudge/Development/phase-5/freaq-front/src/Components/LanguagePicker.js"],"sourcesContent":["import {useNavigate} from 'react-router-dom'\nimport {useState, useEffect} from 'react'\nfunction LanguagePicker({userLanguages, setUserLanguages}){\nconst navigate = useNavigate()\n// the users languages\n// i want all languages displayed\n// a continue where you left off\n// const [userLanguages, setUserLanguages] = useState([])\n// useEffect(() => {\n   \n//     const fetchData = async() => {\n//       try {\n//         const response = await fetch('/languages');\n//         console.log(response)\n//         const data = await response.json();\n//         console.log(data)\n//         setUserLanguages(data);\n//         console.log(userLanguages);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     };\n//     fetchData();\n\n//   }, [userLanguages]);\nuseEffect(() => {\n    \n    fetch('http://localhost:3000/languages')\n      .then((res) => {\n        console.log(res.json)\n        if (res.ok) {\n          res.json().then((data) => setUserLanguages(data))\n        } \n        else {\n          setUserLanguages(null);\n        \n        }\n      });\n  }, []);\n// useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetch('/languages');\n//         if (!response.ok) {\n//           throw new Error(`HTTP error! Status: ${response.status}`);\n//         }\n//         const data = await response.json();\n//         setUserLanguages(data);\n//         console.log(data);\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     };\n//     fetchData();\n//   }, []);\n  \n  \n\n\n  return (\n    <div >\n      {userLanguages.map((language) => {\n        return (\n        <div onClick = {() => navigate(\"/flashcards\")} key={language.id}>\n            \n           \n            {/* {console.log(language.languages.charAt(0).toUpperCase())} */}\n          <div>{language.language}</div>\n          <img src = \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Flag_of_Germany_%28state%29.svg/350px-Flag_of_Germany_%28state%29.svg.png\"/>\n          <p> I told you so seb</p>\n        </div>\n        )\n})}\n      {/* <button onClick={() => navigate('/continue')}>Continue where you left off</button> */}\n    </div>\n  )\n}\n\n\nexport default LanguagePicker;"],"mappings":";;AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACzC,SAASC,cAAcA,CAAAC,IAAA,EAAmC;EAAAC,EAAA;EAAA,IAAlC;IAACC,aAAa;IAAEC;EAAgB,CAAC,GAAAH,IAAA;EACzD,MAAMI,QAAQ,GAAGV,WAAW,EAAE;EAC9B;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACAE,SAAS,CAAC,MAAM;IAEZS,KAAK,CAAC,iCAAiC,CAAC,CACrCC,IAAI,CAAEC,GAAG,IAAK;MACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC;MACrB,IAAIH,GAAG,CAACI,EAAE,EAAE;QACVJ,GAAG,CAACG,IAAI,EAAE,CAACJ,IAAI,CAAEM,IAAI,IAAKT,gBAAgB,CAACS,IAAI,CAAC,CAAC;MACnD,CAAC,MACI;QACHT,gBAAgB,CAAC,IAAI,CAAC;MAExB;IACF,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACR;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAKE,oBACEL,OAAA;IAAAe,QAAA,EACGX,aAAa,CAACY,GAAG,CAAEC,QAAQ,IAAK;MAC/B,oBACAjB,OAAA;QAAKkB,OAAO,EAAIA,CAAA,KAAMZ,QAAQ,CAAC,aAAa,CAAE;QAAAS,QAAA,gBAI5Cf,OAAA;UAAAe,QAAA,EAAME,QAAQ,CAACA;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,eAC9BtB,OAAA;UAAKuB,GAAG,EAAG;QAAqI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eAClJtB,OAAA;UAAAe,QAAA,EAAG;QAAkB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;MAAA,GANyBL,QAAQ,CAACO,EAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAOzD;IAEd,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEQ;AAEV;AAACnB,EAAA,CA1EQF,cAAc;EAAA,QACNL,WAAW;AAAA;AAAA6B,EAAA,GADnBxB,cAAc;AA6EvB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}