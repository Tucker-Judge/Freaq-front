{"ast":null,"code":"var _jsxFileName = \"/Users/tudge/Development/phase-5/freaq-front/src/Components/UserLanguages.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserLanguages(_ref) {\n  _s();\n  let {\n    user,\n    lessons,\n    setLessons\n  } = _ref;\n  const navigate = useNavigate();\n\n  // the users languages\n  // i want all languages displayed\n  // a continue where you left off\n  // const [userLanguages, setUserLanguages] = useState([])\n  // useEffect(() => {\n\n  //     const fetchData = async() => {\n  //       try {\n  //         const response = await fetch('/languages');\n  //         console.log(response)\n  //         const data = await response.json();\n  //         console.log(data)\n  //         setUserLanguages(data);\n  //         console.log(userLanguages);\n  //       } catch (error) {\n  //         console.error(error);\n  //       }\n  //     };\n  //     fetchData();\n  //   }, [userLanguages]);\n  useEffect(() => {\n    fetch('/lessons').then(res => {\n      if (res.ok) {\n        res.json().then(data => setLessons(data));\n      } else {\n        setLessons(null);\n      }\n      console.log(lessons);\n    });\n  }, []);\n\n  // useEffect(() => {\n  //     const fetchData = async () => {\n  //       try {\n  //         const response = await fetch('/languages');\n  //         if (!response.ok) {\n  //           throw new Error(`HTTP error! Status: ${response.status}`);\n  //         }\n  //         const data = await response.json();\n  //         setUserLanguages(data);\n  //         console.log(data);\n  //       } catch (error) {\n  //         console.error('Error fetching data:', error);\n  //       }\n  //     };\n  //     fetchData();\n  //   }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: lessons.map((languages, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: languages[i]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Flag_of_Germany_%28state%29.svg/350px-Flag_of_Germany_%28state%29.svg.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" I told you so seb --nodoubt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(UserLanguages, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = UserLanguages;\nexport default UserLanguages;\nvar _c;\n$RefreshReg$(_c, \"UserLanguages\");","map":{"version":3,"names":["useNavigate","useState","useEffect","jsxDEV","_jsxDEV","UserLanguages","_ref","_s","user","lessons","setLessons","navigate","fetch","then","res","ok","json","data","console","log","children","map","languages","i","fileName","_jsxFileName","lineNumber","columnNumber","src","_c","$RefreshReg$"],"sources":["/Users/tudge/Development/phase-5/freaq-front/src/Components/UserLanguages.js"],"sourcesContent":["import {useNavigate} from 'react-router-dom'\nimport {useState, useEffect} from 'react'\nfunction UserLanguages({user, lessons, setLessons}){\nconst navigate = useNavigate()\n\n// the users languages\n// i want all languages displayed\n// a continue where you left off\n// const [userLanguages, setUserLanguages] = useState([])\n// useEffect(() => {\n   \n//     const fetchData = async() => {\n//       try {\n//         const response = await fetch('/languages');\n//         console.log(response)\n//         const data = await response.json();\n//         console.log(data)\n//         setUserLanguages(data);\n//         console.log(userLanguages);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     };\n//     fetchData();\n//   }, [userLanguages]);\nuseEffect(() => {\n    \n    fetch('/lessons')\n      .then((res) => {\n        if (res.ok) {\n          res.json().then((data) => setLessons(data))\n        } \n        else {\n          setLessons(null);\n        }\n        console.log(lessons)\n      });\n  }, []);\n  \n// useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetch('/languages');\n//         if (!response.ok) {\n//           throw new Error(`HTTP error! Status: ${response.status}`);\n//         }\n//         const data = await response.json();\n//         setUserLanguages(data);\n//         console.log(data);\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     };\n//     fetchData();\n//   }, []);\n  \n  \n\n\n  return (\n    <div >\n      {lessons.map((languages, i) => {\n        return (\n        <div  key={i}>\n        \n          <div>{languages[i]}</div>\n          <img src = \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Flag_of_Germany_%28state%29.svg/350px-Flag_of_Germany_%28state%29.svg.png\"/>\n          <p> I told you so seb --nodoubt</p>\n        </div>\n        )\n})}\n      {/* <button onClick={() => navigate('/continue')}>Continue where you left off</button> */}\n    </div>\n  )\n}\n\n\nexport default UserLanguages;"],"mappings":";;AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACzC,SAASC,aAAaA,CAAAC,IAAA,EAA6B;EAAAC,EAAA;EAAA,IAA5B;IAACC,IAAI;IAAEC,OAAO;IAAEC;EAAU,CAAC,GAAAJ,IAAA;EAClD,MAAMK,QAAQ,GAAGX,WAAW,EAAE;;EAE9B;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAE,SAAS,CAAC,MAAM;IAEZU,KAAK,CAAC,UAAU,CAAC,CACdC,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,CAACC,EAAE,EAAE;QACVD,GAAG,CAACE,IAAI,EAAE,CAACH,IAAI,CAAEI,IAAI,IAAKP,UAAU,CAACO,IAAI,CAAC,CAAC;MAC7C,CAAC,MACI;QACHP,UAAU,CAAC,IAAI,CAAC;MAClB;MACAQ,OAAO,CAACC,GAAG,CAACV,OAAO,CAAC;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAER;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAKE,oBACEL,OAAA;IAAAgB,QAAA,EACGX,OAAO,CAACY,GAAG,CAAC,CAACC,SAAS,EAAEC,CAAC,KAAK;MAC7B,oBACAnB,OAAA;QAAAgB,QAAA,gBAEEhB,OAAA;UAAAgB,QAAA,EAAME,SAAS,CAACC,CAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,eACzBvB,OAAA;UAAKwB,GAAG,EAAG;QAAqI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eAClJvB,OAAA;UAAAgB,QAAA,EAAG;QAA4B;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;MAAA,GAJ1BJ,CAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAKN;IAEd,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEQ;AAEV;AAACpB,EAAA,CAxEQF,aAAa;EAAA,QACLL,WAAW;AAAA;AAAA6B,EAAA,GADnBxB,aAAa;AA2EtB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}