{"ast":null,"code":"var _jsxFileName = \"/Users/tudge/Development/phase-5/freaq-front/src/Components/LanguagePicker.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LanguagePicker() {\n  _s();\n  const navigate = useNavigate();\n  // the users languages\n  // i want all languages displayed\n  // a continue where you left off\n  const [userLanguages, setUserLanguages] = useState([]);\n  useEffect(() => {\n    const fetching = async () => {\n      const req = await fetch('/languages');\n      const res = await req.json();\n      console.log(res);\n      setUserLanguages(res);\n    };\n    fetching();\n    console.log(userLanguages);\n  }, [userLanguages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", userLanguages.language]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(LanguagePicker, \"wNRuc4OfFjL+zXMBlcottvk64tU=\", false, function () {\n  return [useNavigate];\n});\n_c = LanguagePicker;\nexport default LanguagePicker;\nvar _c;\n$RefreshReg$(_c, \"LanguagePicker\");","map":{"version":3,"names":["useNavigate","useState","useEffect","jsxDEV","_jsxDEV","LanguagePicker","_s","navigate","userLanguages","setUserLanguages","fetching","req","fetch","res","json","console","log","children","language","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tudge/Development/phase-5/freaq-front/src/Components/LanguagePicker.js"],"sourcesContent":["import {useNavigate} from 'react-router-dom'\nimport {useState, useEffect} from 'react'\nfunction LanguagePicker(){\nconst navigate = useNavigate()\n// the users languages\n// i want all languages displayed\n// a continue where you left off\nconst [userLanguages, setUserLanguages] = useState([])\nuseEffect(() => {\nconst fetching = async() => {\nconst req = await fetch('/languages')\nconst res = await req.json()\nconsole.log(res)\nsetUserLanguages(res)\n}\nfetching()\nconsole.log(userLanguages)\n},[userLanguages])\n\n\nreturn (\n    <div>\n<div> {userLanguages.language}</div>\n    </div>\n)\n}\n\nexport default LanguagePicker;"],"mappings":";;AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACzC,SAASC,cAAcA,CAAA,EAAE;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGP,WAAW,EAAE;EAC9B;EACA;EACA;EACA,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtDC,SAAS,CAAC,MAAM;IAChB,MAAMQ,QAAQ,GAAG,MAAAA,CAAA,KAAW;MAC5B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC;MACrC,MAAMC,GAAG,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;MAC5BC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;MAChBJ,gBAAgB,CAACI,GAAG,CAAC;IACrB,CAAC;IACDH,QAAQ,EAAE;IACVK,OAAO,CAACC,GAAG,CAACR,aAAa,CAAC;EAC1B,CAAC,EAAC,CAACA,aAAa,CAAC,CAAC;EAGlB,oBACIJ,OAAA;IAAAa,QAAA,eACJb,OAAA;MAAAa,QAAA,GAAK,GAAC,EAACT,aAAa,CAACU,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAO;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC1B;AAEV;AAAChB,EAAA,CAvBQD,cAAc;EAAA,QACNL,WAAW;AAAA;AAAAuB,EAAA,GADnBlB,cAAc;AAyBvB,eAAeA,cAAc;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}