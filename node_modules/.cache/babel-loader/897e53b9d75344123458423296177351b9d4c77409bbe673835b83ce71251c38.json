{"ast":null,"code":"var _jsxFileName = \"/Users/tudge/Development/phase-5/freaq-front/src/Components/LanguagePicker.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LanguagePicker() {\n  _s();\n  const navigate = useNavigate();\n  // the users languages\n  // i want all languages displayed\n  // a continue where you left off\n  const [userLanguages, setUserLanguages] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/languages');\n        console.log(response);\n        const data = await response.json();\n        console.log(data);\n        setUserLanguages(data);\n        console.log(userLanguages);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, [userLanguages]);\n\n  // useEffect(() => {\n  //     const fetchData = async () => {\n  //       try {\n  //         const response = await fetch('/languages');\n  //         if (!response.ok) {\n  //           throw new Error(`HTTP error! Status: ${response.status}`);\n  //         }\n  //         const data = await response.json();\n  //         setUserLanguages(data);\n  //         console.log(data);\n  //       } catch (error) {\n  //         console.error('Error fetching data:', error);\n  //       }\n  //     };\n  //     fetchData();\n  //   }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [userLanguages.map(languages => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: languages.language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" I told you so seb\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, languages.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/continue'),\n      children: \"Continue where you left off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(LanguagePicker, \"wNRuc4OfFjL+zXMBlcottvk64tU=\", false, function () {\n  return [useNavigate];\n});\n_c = LanguagePicker;\nexport default LanguagePicker;\nvar _c;\n$RefreshReg$(_c, \"LanguagePicker\");","map":{"version":3,"names":["useNavigate","useState","useEffect","jsxDEV","_jsxDEV","LanguagePicker","_s","navigate","userLanguages","setUserLanguages","fetchData","response","fetch","console","log","data","json","error","children","map","languages","language","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","_c","$RefreshReg$"],"sources":["/Users/tudge/Development/phase-5/freaq-front/src/Components/LanguagePicker.js"],"sourcesContent":["import {useNavigate} from 'react-router-dom'\nimport {useState, useEffect} from 'react'\nfunction LanguagePicker(){\nconst navigate = useNavigate()\n// the users languages\n// i want all languages displayed\n// a continue where you left off\nconst [userLanguages, setUserLanguages] = useState([])\nuseEffect(() => {\n   \n    const fetchData = async() => {\n      try {\n        const response = await fetch('/languages');\n        console.log(response)\n        const data = await response.json();\n        console.log(data)\n        setUserLanguages(data);\n        console.log(userLanguages);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n\n  }, [userLanguages]);\n\n// useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetch('/languages');\n//         if (!response.ok) {\n//           throw new Error(`HTTP error! Status: ${response.status}`);\n//         }\n//         const data = await response.json();\n//         setUserLanguages(data);\n//         console.log(data);\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     };\n//     fetchData();\n//   }, []);\n  \n  \n\n\n  return (\n    <div>\n      {userLanguages.map((languages) => (\n        <div key={languages.id}>\n          <div>{languages.language}</div>\n          {/* <img /> */}\n          <p> I told you so seb</p>\n        </div>\n      ))}\n      <button onClick={() => navigate('/continue')}>Continue where you left off</button>\n    </div>\n  );\n}\n\n\nexport default LanguagePicker;"],"mappings":";;AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACzC,SAASC,cAAcA,CAAA,EAAE;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGP,WAAW,EAAE;EAC9B;EACA;EACA;EACA,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtDC,SAAS,CAAC,MAAM;IAEZ,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAW;MAC3B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC;QAC1CC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;QACrB,MAAMI,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;QAClCH,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;QACjBN,gBAAgB,CAACM,IAAI,CAAC;QACtBF,OAAO,CAACC,GAAG,CAACN,aAAa,CAAC;MAC5B,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACDP,SAAS,EAAE;EAEb,CAAC,EAAE,CAACF,aAAa,CAAC,CAAC;;EAErB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAKE,oBACEJ,OAAA;IAAAc,QAAA,GACGV,aAAa,CAACW,GAAG,CAAEC,SAAS,iBAC3BhB,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAAc,QAAA,EAAME,SAAS,CAACC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eAE/BrB,OAAA;QAAAc,QAAA,EAAG;MAAkB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA,GAHjBL,SAAS,CAACM,EAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAKvB,CAAC,eACFrB,OAAA;MAAQuB,OAAO,EAAEA,CAAA,KAAMpB,QAAQ,CAAC,WAAW,CAAE;MAAAW,QAAA,EAAC;IAA2B;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC9E;AAEV;AAACnB,EAAA,CAxDQD,cAAc;EAAA,QACNL,WAAW;AAAA;AAAA4B,EAAA,GADnBvB,cAAc;AA2DvB,eAAeA,cAAc;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}