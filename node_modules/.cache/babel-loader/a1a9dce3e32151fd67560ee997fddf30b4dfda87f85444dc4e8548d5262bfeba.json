{"ast":null,"code":"var _jsxFileName = \"/Users/tudge/Development/phase-5/freaq-front-git/src/Components/FlashcardSet.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FlashcardSet(_ref) {\n  _s();\n  let {\n    selectedSet\n  } = _ref;\n  const [input, setInput] = useState(\"\");\n  const [count, setCount] = useState(0);\n  function inputValueChanged(e, flashcardFront) {\n    if (input === flashcardFront) {\n      setCount(count + 1);\n    }\n    setInput(e.target.value);\n  }\n  function textSynthesis(flashcardFront) {\n    const synth = window.speechSynthesis;\n    const utterance = new SpeechSynthesisUtterance(flashcardFront);\n    synth.speak(utterance);\n  }\n  const GameComponent = _ref2 => {\n    let {\n      flashcard\n    } = _ref2;\n    if (count === 0) {\n      // I want to have the card displayed and it must be typed correctly to move on\n      // with accent keyboard below the game\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [flashcard.front, flashcard.oneback, /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => inputValueChanged(e, flashcard.front),\n          type: \"text\",\n          value: input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this);\n    } else if (count === 1) {\n      // I want to have the card front displayed and it will be spoken to the user\n      textSynthesis(flashcard.front);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [flashcard.front, flashcard.oneback, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => textSynthesis(flashcard.front),\n          children: \"Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this);\n    }\n    // hear it repeated then move on\n    //^ to be in useEffect\n    // if clicked reset the timer\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: selectedSet.map(flashcard => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(GameComponent, {\n        flashcard: flashcard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, flashcard.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(FlashcardSet, \"Mk423h3OarbyGSPk7xyQ8Z2ZryE=\");\n_c = FlashcardSet;\nexport default FlashcardSet;\nvar _c;\n$RefreshReg$(_c, \"FlashcardSet\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FlashcardSet","_ref","_s","selectedSet","input","setInput","count","setCount","inputValueChanged","e","flashcardFront","target","value","textSynthesis","synth","window","speechSynthesis","utterance","SpeechSynthesisUtterance","speak","GameComponent","_ref2","flashcard","children","front","oneback","onChange","type","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","id","_c","$RefreshReg$"],"sources":["/Users/tudge/Development/phase-5/freaq-front-git/src/Components/FlashcardSet.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction FlashcardSet({ selectedSet }) {\n  const [input, setInput] = useState(\"\");\n  const [count, setCount] = useState(0);\n\n  function inputValueChanged(e, flashcardFront) {\n    if (input === flashcardFront) {\n      setCount(count + 1);\n    }\n    setInput(e.target.value);\n  }\n\n  function textSynthesis(flashcardFront) {\n    const synth = window.speechSynthesis;\n    const utterance = new SpeechSynthesisUtterance(flashcardFront);\n    synth.speak(utterance);\n  }\n\n  const GameComponent = ({ flashcard }) => {\n    if (count === 0) {\n      // I want to have the card displayed and it must be typed correctly to move on\n      // with accent keyboard below the game\n      return (\n        <div>\n          {flashcard.front}\n          {flashcard.oneback}\n          <input onChange={(e) => inputValueChanged(e, flashcard.front)} type=\"text\" value={input} />\n        </div>\n      );\n    } else if (count === 1) {\n      // I want to have the card front displayed and it will be spoken to the user\n      textSynthesis(flashcard.front);\n\n      return (\n        <div>\n          {flashcard.front}\n          {flashcard.oneback}\n          <button onClick={() => textSynthesis(flashcard.front)}>Again</button>\n        </div>\n      );\n    }\n    // hear it repeated then move on\n    //^ to be in useEffect\n    // if clicked reset the timer\n  };\n\n  return (\n    <div>\n      {selectedSet.map((flashcard) => (\n        <div key={flashcard.id}>\n          <GameComponent flashcard={flashcard} />\n          {/* Add more elements to render additional data */}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default FlashcardSet;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,YAAYA,CAAAC,IAAA,EAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAY,CAAC,GAAAF,IAAA;EACnC,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAErC,SAASW,iBAAiBA,CAACC,CAAC,EAAEC,cAAc,EAAE;IAC5C,IAAIN,KAAK,KAAKM,cAAc,EAAE;MAC5BH,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACrB;IACAD,QAAQ,CAACI,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;EAC1B;EAEA,SAASC,aAAaA,CAACH,cAAc,EAAE;IACrC,MAAMI,KAAK,GAAGC,MAAM,CAACC,eAAe;IACpC,MAAMC,SAAS,GAAG,IAAIC,wBAAwB,CAACR,cAAc,CAAC;IAC9DI,KAAK,CAACK,KAAK,CAACF,SAAS,CAAC;EACxB;EAEA,MAAMG,aAAa,GAAGC,KAAA,IAAmB;IAAA,IAAlB;MAAEC;IAAU,CAAC,GAAAD,KAAA;IAClC,IAAIf,KAAK,KAAK,CAAC,EAAE;MACf;MACA;MACA,oBACEP,OAAA;QAAAwB,QAAA,GACGD,SAAS,CAACE,KAAK,EACfF,SAAS,CAACG,OAAO,eAClB1B,OAAA;UAAO2B,QAAQ,EAAGjB,CAAC,IAAKD,iBAAiB,CAACC,CAAC,EAAEa,SAAS,CAACE,KAAK,CAAE;UAACG,IAAI,EAAC,MAAM;UAACf,KAAK,EAAER;QAAM;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACvF;IAEV,CAAC,MAAM,IAAIzB,KAAK,KAAK,CAAC,EAAE;MACtB;MACAO,aAAa,CAACS,SAAS,CAACE,KAAK,CAAC;MAE9B,oBACEzB,OAAA;QAAAwB,QAAA,GACGD,SAAS,CAACE,KAAK,EACfF,SAAS,CAACG,OAAO,eAClB1B,OAAA;UAAQiC,OAAO,EAAEA,CAAA,KAAMnB,aAAa,CAACS,SAAS,CAACE,KAAK,CAAE;UAAAD,QAAA,EAAC;QAAK;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACjE;IAEV;IACA;IACA;IACA;EACF,CAAC;;EAED,oBACEhC,OAAA;IAAAwB,QAAA,EACGpB,WAAW,CAAC8B,GAAG,CAAEX,SAAS,iBACzBvB,OAAA;MAAAwB,QAAA,eACExB,OAAA,CAACqB,aAAa;QAACE,SAAS,EAAEA;MAAU;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG,GAD/BT,SAAS,CAACY,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAIvB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAAC7B,EAAA,CAvDQF,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAyDrB,eAAeA,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}