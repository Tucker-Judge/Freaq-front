{"ast":null,"code":"var _jsxFileName = \"/Users/tudge/Development/phase-5/freaq-front/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\n// import Login from './Components/Login';\nimport NavBar from './Components/Navbar';\n// import Home from './Components/Home';\nimport Footer from './Components/Footer';\nimport LanguagePicker from './Components/LanguagePicker';\nimport Course from './Components/Course';\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [languageApp, setLanguageApp] = useState(\"en-US\");\n  const [user, setUser] = useState(null);\n  // const [language]\n  // fetch user then set a language state to the primary language of the app\n\n  // useEffect(() => {\n  //   // Set the language state to the user's browser language\n  // }, []);\n  // let userLang = navigator.language || navigator.userLanguage;\n  // user ? (setLanguageApp(user.language) : setLanguageApp(userLang))\n  let userLang = navigator.language || navigator.userLanguage;\n  if (user && user.language) {\n    setLanguageApp(user.language);\n  } else {\n    setLanguageApp(userLang);\n  }\n  const [userLanguages, setUserLanguages] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3000/languages').then(res => {\n      console.log(res.json);\n      if (res.ok) {\n        res.json().then(data => setUserLanguages(data));\n      } else {\n        setUserLanguages(null);\n      }\n    });\n  }, []);\n\n  // useEffect(() => {\n  //   fetch(\"/show\")\n  //   .then((r) => {\n  //     if (r.ok) {\n  //       r.json().then((user) => setUser(user));\n  //     } else {\n  //       setUser(null)\n  //     }\n  //   });\n  // },[]);\n  // useEffect(() => {\n  //   fetch(\"/show\")\n  //   .then((r) => {\n  //     if (r.ok) {\n  //       r.json().then((user) => setUser(user));\n  //     } else {\n  //       setUser(null)\n  //     }\n  //   });\n  // },[]);\n\n  const router = createBrowserRouter([{\n    path: \"/*\",\n    element: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"404 not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 16\n    }, this)\n  },\n  // {\n  //   path:\"/login\",\n  //   element: <Login />\n  // },\n  {\n    path: \"/\",\n    // element: <Home user={user}/>\n    element: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loggedIn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 16\n    }, this)\n  },\n  // {\n  //   path: \"/AddLanguages\",\n  //   element: <Languages />\n  // },\n  {\n    path: \"/languages\",\n    element: /*#__PURE__*/_jsxDEV(LanguagePicker, {\n      material: userLanguages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 18\n    }, this)\n  }, {\n    path: \"/courses\",\n    element: /*#__PURE__*/_jsxDEV(Course, {\n      languageApp: languageApp,\n      material: userLanguages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 18\n    }, this)\n  }]);\n\n  //gets current language\n  //return whatever the route is on\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      languageApp: languageApp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fWMaubJiL+ems65VI1N53gi/ixY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["NavBar","Footer","LanguagePicker","Course","createBrowserRouter","RouterProvider","useState","useEffect","jsxDEV","_jsxDEV","App","_s","languageApp","setLanguageApp","user","setUser","userLang","navigator","language","userLanguage","userLanguages","setUserLanguages","fetch","then","res","console","log","json","ok","data","router","path","element","children","fileName","_jsxFileName","lineNumber","columnNumber","material","className","_c","$RefreshReg$"],"sources":["/Users/tudge/Development/phase-5/freaq-front/src/App.js"],"sourcesContent":["import './App.css';\n// import Login from './Components/Login';\nimport NavBar from './Components/Navbar';\n// import Home from './Components/Home';\nimport Footer from './Components/Footer';\nimport LanguagePicker from './Components/LanguagePicker';\nimport Course from './Components/Course';\nimport {\n  createBrowserRouter,\n  RouterProvider,\n} from \"react-router-dom\";\nimport {useState, useEffect} from 'react';\n\nfunction App() {\n  const [languageApp, setLanguageApp] = useState(\"en-US\")\n  const [user, setUser] = useState(null)\n  // const [language]\n  // fetch user then set a language state to the primary language of the app\n\n  // useEffect(() => {\n  //   // Set the language state to the user's browser language\n  // }, []);\n  // let userLang = navigator.language || navigator.userLanguage;\n  // user ? (setLanguageApp(user.language) : setLanguageApp(userLang))\n  let userLang = navigator.language || navigator.userLanguage;\n\nif (user && user.language) {\n  setLanguageApp(user.language);\n} else {\n  setLanguageApp(userLang);\n}\n\nconst [userLanguages, setUserLanguages] = useState([])\n\nuseEffect(() => {\n    \n    fetch('http://localhost:3000/languages')\n      .then((res) => {\n        console.log(res.json)\n        if (res.ok) {\n          res.json().then((data) => setUserLanguages(data))\n        } \n        else {\n          setUserLanguages(null);\n        \n        }\n      });\n  }, []);\n  \n  // useEffect(() => {\n  //   fetch(\"/show\")\n  //   .then((r) => {\n  //     if (r.ok) {\n  //       r.json().then((user) => setUser(user));\n  //     } else {\n  //       setUser(null)\n  //     }\n  //   });\n  // },[]);\n  // useEffect(() => {\n  //   fetch(\"/show\")\n  //   .then((r) => {\n  //     if (r.ok) {\n  //       r.json().then((user) => setUser(user));\n  //     } else {\n  //       setUser(null)\n  //     }\n  //   });\n  // },[]);\n\n\n  const router = createBrowserRouter([\n  \n    {\n      path:\"/*\",\n      element: <h1>404 not found</h1>\n    },\n    // {\n    //   path:\"/login\",\n    //   element: <Login />\n    // },\n    {\n      path: \"/\",\n      // element: <Home user={user}/>\n      element: <h1>loggedIn</h1>\n    },\n    // {\n    //   path: \"/AddLanguages\",\n    //   element: <Languages />\n    // },\n      {\n        path: \"/languages\",\n        element: <LanguagePicker material = {userLanguages}/>\n      },\n      {\n        path: \"/courses\",\n        element: <Course languageApp = {languageApp} material = {userLanguages}/>\n      }\n  ]);\n  \n  //gets current language\n  //return whatever the route is on\n  return (\n    <div className=\"App\">\n      <NavBar />\n      {/* {user ? (\n      // <h1>Logged In</h1> */}\n        <RouterProvider router={router} />\n      {/* ):(\n        <Login />\n        \n      )} */}\n      <div>\n\n        </div>\n<Footer languageApp={languageApp}/>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}