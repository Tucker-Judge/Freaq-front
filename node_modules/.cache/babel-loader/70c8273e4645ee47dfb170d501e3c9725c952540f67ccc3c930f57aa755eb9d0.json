{"ast":null,"code":"var _jsxFileName = \"/Users/tudge/Development/phase-5/freaq-front/src/Components/UserLanguages.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LanguagePicker(_ref) {\n  _s();\n  let {\n    user,\n    lessons,\n    setLessons\n  } = _ref;\n  const navigate = useNavigate();\n\n  // the users languages\n  // i want all languages displayed\n  // a continue where you left off\n  // const [userLanguages, setUserLanguages] = useState([])\n  // useEffect(() => {\n\n  //     const fetchData = async() => {\n  //       try {\n  //         const response = await fetch('/languages');\n  //         console.log(response)\n  //         const data = await response.json();\n  //         console.log(data)\n  //         setUserLanguages(data);\n  //         console.log(userLanguages);\n  //       } catch (error) {\n  //         console.error(error);\n  //       }\n  //     };\n  //     fetchData();\n\n  //   }, [userLanguages]);\n  useEffect(() => {\n    fetch('/lessons').then(res => {\n      console.log(res.json);\n      if (res.ok) {\n        res.json().then(data => setLessons(data));\n        console.log(lessons);\n      } else {\n        setLessons(null);\n      }\n    });\n  }, []);\n  // useEffect(() => {\n  //     const fetchData = async () => {\n  //       try {\n  //         const response = await fetch('/languages');\n  //         if (!response.ok) {\n  //           throw new Error(`HTTP error! Status: ${response.status}`);\n  //         }\n  //         const data = await response.json();\n  //         setUserLanguages(data);\n  //         console.log(data);\n  //       } catch (error) {\n  //         console.error('Error fetching data:', error);\n  //       }\n  //     };\n  //     fetchData();\n  //   }, []);\n\n  // post user_id, language_id\n\n  {\n    console.log(lessons);\n  }\n  {\n    console.log(lessons.languages);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: lessons[0].languages.map(language => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: language.language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Flag_of_Germany_%28state%29.svg/350px-Flag_of_Germany_%28state%29.svg.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" I told you so seb --no doubt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, language.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 3\n  }, this);\n}\n_s(LanguagePicker, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = LanguagePicker;\nexport default LanguagePicker;\nvar _c;\n$RefreshReg$(_c, \"LanguagePicker\");","map":{"version":3,"names":["useNavigate","useState","useEffect","jsxDEV","_jsxDEV","LanguagePicker","_ref","_s","user","lessons","setLessons","navigate","fetch","then","res","console","log","json","ok","data","languages","children","map","language","fileName","_jsxFileName","lineNumber","columnNumber","src","id","_c","$RefreshReg$"],"sources":["/Users/tudge/Development/phase-5/freaq-front/src/Components/UserLanguages.js"],"sourcesContent":["import {useNavigate} from 'react-router-dom'\nimport {useState, useEffect} from 'react'\nfunction LanguagePicker({user, lessons, setLessons}){\nconst navigate = useNavigate()\n\n\n// the users languages\n// i want all languages displayed\n// a continue where you left off\n// const [userLanguages, setUserLanguages] = useState([])\n// useEffect(() => {\n   \n//     const fetchData = async() => {\n//       try {\n//         const response = await fetch('/languages');\n//         console.log(response)\n//         const data = await response.json();\n//         console.log(data)\n//         setUserLanguages(data);\n//         console.log(userLanguages);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     };\n//     fetchData();\n\n//   }, [userLanguages]);\nuseEffect(() => {\n    \n    fetch('/lessons')\n      .then((res) => {\n        console.log(res.json)\n        if (res.ok) {\n          res.json().then((data) => setLessons(data))\n          console.log(lessons)\n        } \n        else {\n          setLessons(null);\n        }\n      });\n  }, []);\n// useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetch('/languages');\n//         if (!response.ok) {\n//           throw new Error(`HTTP error! Status: ${response.status}`);\n//         }\n//         const data = await response.json();\n//         setUserLanguages(data);\n//         console.log(data);\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     };\n//     fetchData();\n//   }, []);\n  \n  \n\n// post user_id, language_id\n\n\n{console.log(lessons)}\n{console.log(lessons.languages)}\nreturn (\n  <div>\n    {lessons[0].languages.map((language) => (\n      <div key={language.id}>\n        <div>{language.language}</div>\n        <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Flag_of_Germany_%28state%29.svg/350px-Flag_of_Germany_%28state%29.svg.png\" />\n        <p> I told you so seb --no doubt</p>\n      </div>\n    ))}\n  </div>\n);\n\n}\n\n\nexport default LanguagePicker;"],"mappings":";;AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACzC,SAASC,cAAcA,CAAAC,IAAA,EAA6B;EAAAC,EAAA;EAAA,IAA5B;IAACC,IAAI;IAAEC,OAAO;IAAEC;EAAU,CAAC,GAAAJ,IAAA;EACnD,MAAMK,QAAQ,GAAGX,WAAW,EAAE;;EAG9B;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACAE,SAAS,CAAC,MAAM;IAEZU,KAAK,CAAC,UAAU,CAAC,CACdC,IAAI,CAAEC,GAAG,IAAK;MACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC;MACrB,IAAIH,GAAG,CAACI,EAAE,EAAE;QACVJ,GAAG,CAACG,IAAI,EAAE,CAACJ,IAAI,CAAEM,IAAI,IAAKT,UAAU,CAACS,IAAI,CAAC,CAAC;QAC3CJ,OAAO,CAACC,GAAG,CAACP,OAAO,CAAC;MACtB,CAAC,MACI;QACHC,UAAU,CAAC,IAAI,CAAC;MAClB;IACF,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACR;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAIA;;EAGA;IAACK,OAAO,CAACC,GAAG,CAACP,OAAO,CAAC;EAAA;EACrB;IAACM,OAAO,CAACC,GAAG,CAACP,OAAO,CAACW,SAAS,CAAC;EAAA;EAC/B,oBACEhB,OAAA;IAAAiB,QAAA,EACGZ,OAAO,CAAC,CAAC,CAAC,CAACW,SAAS,CAACE,GAAG,CAAEC,QAAQ,iBACjCnB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAME,QAAQ,CAACA;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eAC9BvB,OAAA;QAAKwB,GAAG,EAAC;MAAqI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACjJvB,OAAA;QAAAiB,QAAA,EAAG;MAA6B;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA,GAH5BJ,QAAQ,CAACM,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAKtB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAGR;AAACpB,EAAA,CA3EQF,cAAc;EAAA,QACNL,WAAW;AAAA;AAAA8B,EAAA,GADnBzB,cAAc;AA8EvB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}