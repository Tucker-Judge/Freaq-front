{"ast":null,"code":"var _jsxFileName = \"/Users/tudge/Development/phase-5/freaq-front-git/src/Components/FlashcardSet.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FlashcardSet(_ref) {\n  _s();\n  let {\n    selectedSet\n  } = _ref;\n  // map through each card\n  // function in map taking in card\n\n  // function will be called on each card\n  const [input, setInput] = useState(\"\");\n  const [count, setCount] = useState(0);\n  const GameComponent = flashcard => {\n    setCount(0);\n    if (count === 0) {\n      // i want to have the card displayed and it must be typed correctly to move on\n      // with accent keyboard below the game\n      function inputValueChanged(e) {\n        if (input === flashcard.front) {\n          return count + 1;\n        }\n        setInput(e.target.value);\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [flashcard.front, flashcard.oneback, /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => inputValueChanged(e),\n          type: \"text\",\n          value: input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this);\n    } else if (count = 1) {\n      // I want to have the card front displayed and it will be spoken to the user\n      // hear it repeated then move on\n      function textSynthesis() {\n        const synth = window.speechSynthesis;\n        const utterance = new SpeechSynthesisUtterance(flashcard.front);\n        synth.speak(utterance);\n      }\n      textSynthesis();\n\n      //^ to be in useEffect\n      // if clicked reset the timer\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [flashcard.front, flashcard.oneback, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: textSynthesis,\n          children: \"Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this);\n    } else if (count = 2) {\n      // Speech recognition of flashcard.front\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: selectedSet.map(flashCard => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: GameComponent\n    }, flashCard.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(FlashcardSet, \"Mk423h3OarbyGSPk7xyQ8Z2ZryE=\");\n_c = FlashcardSet;\nexport default FlashcardSet;\nvar _c;\n$RefreshReg$(_c, \"FlashcardSet\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FlashcardSet","_ref","_s","selectedSet","input","setInput","count","setCount","GameComponent","flashcard","inputValueChanged","e","front","target","value","children","oneback","onChange","type","fileName","_jsxFileName","lineNumber","columnNumber","textSynthesis","synth","window","speechSynthesis","utterance","SpeechSynthesisUtterance","speak","onClick","map","flashCard","id","_c","$RefreshReg$"],"sources":["/Users/tudge/Development/phase-5/freaq-front-git/src/Components/FlashcardSet.js"],"sourcesContent":["import React from 'react';\nimport {useState} from 'react'\n\nfunction FlashcardSet({ selectedSet }) {\n  // map through each card\n  // function in map taking in card\n\n  // function will be called on each card\nconst [input, setInput] = useState(\"\")\nconst [count, setCount] = useState(0)\n\n    const GameComponent = (flashcard) => {\n   \n    setCount(0)\n    if (count === 0){\n// i want to have the card displayed and it must be typed correctly to move on\n// with accent keyboard below the game\n      function inputValueChanged(e){\n        if (input === flashcard.front) {\n          return count + 1\n        }\n        setInput(e.target.value)\n      }\n    return (\n      <div>\n      {flashcard.front}\n      {flashcard.oneback}\n      <input onChange = {(e) => inputValueChanged(e)} type=\"text\" value = {input}/>\n      </div>\n    )\n    \n  }\n  else if (count = 1) {\n    // I want to have the card front displayed and it will be spoken to the user\n    // hear it repeated then move on\n    function textSynthesis(){\n      const synth = window.speechSynthesis;\n      const utterance = new SpeechSynthesisUtterance(flashcard.front);\n      synth.speak(utterance);\n      \n    }\ntextSynthesis()\n    \n    //^ to be in useEffect\n// if clicked reset the timer\n\n    return (\n      <div>\n        {flashcard.front}\n        {flashcard.oneback}\n        <button onClick = {textSynthesis}>Again</button>\n      </div>\n    )\n  }\n  else if (count = 2) {\n    // Speech recognition of flashcard.front\n  }\n}\n  return (\n    <div>\n      {selectedSet.map((flashCard) => (\n        <div key={flashCard.id}>\n          {GameComponent}\n          {/* Add more elements to render additional data */}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default FlashcardSet;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,YAAYA,CAAAC,IAAA,EAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAY,CAAC,GAAAF,IAAA;EACnC;EACA;;EAEA;EACF,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAEjC,MAAMW,aAAa,GAAIC,SAAS,IAAK;IAErCF,QAAQ,CAAC,CAAC,CAAC;IACX,IAAID,KAAK,KAAK,CAAC,EAAC;MACpB;MACA;MACM,SAASI,iBAAiBA,CAACC,CAAC,EAAC;QAC3B,IAAIP,KAAK,KAAKK,SAAS,CAACG,KAAK,EAAE;UAC7B,OAAON,KAAK,GAAG,CAAC;QAClB;QACAD,QAAQ,CAACM,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;MAC1B;MACF,oBACEf,OAAA;QAAAgB,QAAA,GACCN,SAAS,CAACG,KAAK,EACfH,SAAS,CAACO,OAAO,eAClBjB,OAAA;UAAOkB,QAAQ,EAAKN,CAAC,IAAKD,iBAAiB,CAACC,CAAC,CAAE;UAACO,IAAI,EAAC,MAAM;UAACJ,KAAK,EAAIV;QAAM;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACvE;IAGV,CAAC,MACI,IAAIhB,KAAK,GAAG,CAAC,EAAE;MAClB;MACA;MACA,SAASiB,aAAaA,CAAA,EAAE;QACtB,MAAMC,KAAK,GAAGC,MAAM,CAACC,eAAe;QACpC,MAAMC,SAAS,GAAG,IAAIC,wBAAwB,CAACnB,SAAS,CAACG,KAAK,CAAC;QAC/DY,KAAK,CAACK,KAAK,CAACF,SAAS,CAAC;MAExB;MACJJ,aAAa,EAAE;;MAEX;MACJ;;MAEI,oBACExB,OAAA;QAAAgB,QAAA,GACGN,SAAS,CAACG,KAAK,EACfH,SAAS,CAACO,OAAO,eAClBjB,OAAA;UAAQ+B,OAAO,EAAIP,aAAc;UAAAR,QAAA,EAAC;QAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC5C;IAEV,CAAC,MACI,IAAIhB,KAAK,GAAG,CAAC,EAAE;MAClB;IAAA;EAEJ,CAAC;EACC,oBACEP,OAAA;IAAAgB,QAAA,EACGZ,WAAW,CAAC4B,GAAG,CAAEC,SAAS,iBACzBjC,OAAA;MAAAgB,QAAA,EACGP;IAAa,GADNwB,SAAS,CAACC,EAAE;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAIvB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAACpB,EAAA,CAjEQF,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAmErB,eAAeA,YAAY;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}