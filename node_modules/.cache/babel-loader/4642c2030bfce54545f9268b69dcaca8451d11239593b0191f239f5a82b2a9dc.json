{"ast":null,"code":"var _jsxFileName = \"/Users/tudge/Development/phase-5/freaq-front-git/src/Components/FlashcardSet.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FlashcardSet(_ref) {\n  _s();\n  let {\n    selectedSet,\n    languageApp,\n    user\n  } = _ref;\n  const [input, setInput] = useState(\"\");\n  const [count, setCount] = useState(0);\n  const [index, setIndex] = useState(0);\n  const [timerStart, setTimerStart] = useState(10);\n  const [timerEnd, setTimerEnd] = useState(0);\n  const [speechInput, setSpeechInput] = useState(\"\");\n  const {\n    transcript,\n    resetTranscript,\n    listening,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition(\n    // Pass in the language configuration object\n  );\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"no... just get off whatever browser you are on it doesnt have support for literally anything\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n  function inputValueChanged(e) {\n    e.preventDefault();\n    if (e.target.value === selectedSet[index].flashcard.front) {\n      setCount(count + 1);\n      setInput('');\n    } else {\n      setInput(e.target.value);\n    }\n  }\n  useEffect(() => {\n    if (count === 1) {\n      textSynthesis();\n    }\n  }, [count]);\n  // text synthesis function\n  function textSynthesis() {\n    const synth = window.speechSynthesis;\n    const utterance = new SpeechSynthesisUtterance(selectedSet[index].flashcard.front);\n    utterance.lang = user.lang_code;\n    utterance.addEventListener(\"end\", () => {\n      synth.cancel();\n    });\n    let interval = setInterval(() => {\n      setTimerStart(prevTimerStart => {\n        const newTimerStart = prevTimerStart - 1;\n        if (newTimerStart === 3 || newTimerStart === 8) {\n          synth.speak(utterance);\n        }\n        if (newTimerStart <= 0) {\n          clearInterval(interval);\n          setCount(2);\n        }\n        return newTimerStart;\n      });\n    }, 500);\n  }\n  // function speechSynthesis(){\n  //   const recognition = new SpeechRecognition()\n  //   const grammarList = new SpeechGrammarList()\n  //       recognition.lang = user.lang_code;\n  //       recognition.interimResults = false;\n  //       recognition.maxAlternatives = 1;\n  //       recognition.grammars = grammarList\n  //       recognition.start();\n\n  //       recognition.onresult = function(event) {\n  //         const speechResult = event.results[0][0].transcript.trim();\n  //         setSpeechInput(speechResult);\n  //         if (speechResult === selectedSet[index].flashcard.front) {\n  //           setCount(count + 1);\n  //           setSpeechInput('');\n  //           recognition.stop();\n  //         }\n  //       }\n  // }\n  function handleSpeechRecognition(front) {\n    SpeechRecognition.startListening({\n      lang: \"de-DE\",\n      continuous: true\n    });\n    const resultHandler = () => {\n      console.log(transcript);\n      const frontlower = front.toLowerCase();\n      if (transcript.includes(frontlower)) {\n        // setCount(0);\n        // setIndex(index + 1);\n        // setTimerStart(10);\n        // resetTranscript();\n        SpeechRecognition.stopListening();\n      }\n    };\n    SpeechRecognition.onresult = resultHandler();\n    SpeechRecognition.onerror = () => resetTranscript();\n  }\n\n  //    const whateva = () => {\n  //     while (listening) {\n  //     handleSpeechRecognition()\n  //   }\n  // }\n\n  // console.log(whateva)\n  const GameComponent = _ref2 => {\n    let {\n      flashcard\n    } = _ref2;\n    // map through each card\n    // function in map taking in card\n\n    if (count === 0) {\n      // i want to have the card displayed and it must be typed correctly to move on\n      // with accent keyboard below the game\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [flashcard.front, flashcard.one_back, /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => inputValueChanged(e),\n          type: \"text\",\n          value: input,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }, this);\n    } else if (count === 1) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: flashcard.front\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: flashcard.one_back\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }, this);\n    } else if (count == 2) {\n      // SpeechRecognition.startListening()\n      handleSpeechRecognition(flashcard.front);\n      // whateva()\n      // handleSpeechRecognition()\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Repeat the front of the card:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: transcript\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: flashcard.front\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), listening ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRXb04ZJC0pLpX-xTy0nKZXYGb2QJJEI2Wg5A&usqp=CAU\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" this isnt working i hate it here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 142\n        }, this), listening ? \"hate\" : \"love\", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"i am losingggg it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(GameComponent, {\n        flashcard: selectedSet[index].flashcard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 3\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n_s(FlashcardSet, \"h5UZyWvZ2/bL/qlJvK1avr3h1AY=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = FlashcardSet;\nexport default FlashcardSet;\nvar _c;\n$RefreshReg$(_c, \"FlashcardSet\");","map":{"version":3,"names":["useState","useEffect","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","FlashcardSet","_ref","_s","selectedSet","languageApp","user","input","setInput","count","setCount","index","setIndex","timerStart","setTimerStart","timerEnd","setTimerEnd","speechInput","setSpeechInput","transcript","resetTranscript","listening","browserSupportsSpeechRecognition","children","fileName","_jsxFileName","lineNumber","columnNumber","inputValueChanged","e","preventDefault","target","value","flashcard","front","textSynthesis","synth","window","speechSynthesis","utterance","SpeechSynthesisUtterance","lang","lang_code","addEventListener","cancel","interval","setInterval","prevTimerStart","newTimerStart","speak","clearInterval","handleSpeechRecognition","startListening","continuous","resultHandler","console","log","frontlower","toLowerCase","includes","stopListening","onresult","onerror","GameComponent","_ref2","one_back","onChange","type","autoFocus","src","_c","$RefreshReg$"],"sources":["/Users/tudge/Development/phase-5/freaq-front-git/src/Components/FlashcardSet.js"],"sourcesContent":["\nimport {useState, useEffect} from 'react'\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nfunction FlashcardSet({ selectedSet, languageApp, user }) {\n \n  const [input, setInput] = useState(\"\")\n  const [count, setCount] = useState(0)\n  const [index, setIndex] = useState(0)\n  const [timerStart, setTimerStart] = useState(10)\n  const [timerEnd, setTimerEnd] = useState(0)\n  const [speechInput, setSpeechInput] = useState(\"\")\n  const {\n    transcript,\n    resetTranscript,\n    listening,\n    browserSupportsSpeechRecognition,\n\n  } = useSpeechRecognition(\n    // Pass in the language configuration object\n  );\n  if (!browserSupportsSpeechRecognition) {\n    return (\n      <div>\n        no... just get off whatever browser you are on it doesnt have support for literally anything\n      </div>\n    )\n  }\n  \n\n \n\n  function inputValueChanged(e) {\n    e.preventDefault()\n    if (e.target.value === selectedSet[index].flashcard.front) {\n      setCount(count + 1);\n      setInput('');\n    } else {\n      setInput(e.target.value);\n    }\n  }\n  useEffect(() => {\n    if (count === 1) {\n      textSynthesis()\n    }\n  },[count])\n  // text synthesis function\n  function textSynthesis() {\n    const synth = window.speechSynthesis;\n    const utterance = new SpeechSynthesisUtterance(selectedSet[index].flashcard.front);\n    utterance.lang = user.lang_code\n    utterance.addEventListener(\"end\", () => {\n      synth.cancel();\n    });\n    \n    let interval = setInterval(() => {\n      setTimerStart((prevTimerStart) => {\n        const newTimerStart = prevTimerStart - 1;\n        \n        if (newTimerStart === 3 || newTimerStart === 8) {\n          synth.speak(utterance);\n        }\n        \n        if (newTimerStart <= 0) {\n          clearInterval(interval);\n          setCount(2)\n        }\n        \n        return newTimerStart;\n        \n      });\n    }, 500);\n    \n  }\n  // function speechSynthesis(){\n    //   const recognition = new SpeechRecognition()\n    //   const grammarList = new SpeechGrammarList()\n    //       recognition.lang = user.lang_code;\n    //       recognition.interimResults = false;\n    //       recognition.maxAlternatives = 1;\n    //       recognition.grammars = grammarList\n    //       recognition.start();\n    \n    //       recognition.onresult = function(event) {\n      //         const speechResult = event.results[0][0].transcript.trim();\n      //         setSpeechInput(speechResult);\n      //         if (speechResult === selectedSet[index].flashcard.front) {\n        //           setCount(count + 1);\n        //           setSpeechInput('');\n        //           recognition.stop();\n        //         }\n        //       }\n        // }\n        function handleSpeechRecognition(front) {\n          SpeechRecognition.startListening({lang: \"de-DE\", continuous: true})\n        \n          const resultHandler = () => {\n            console.log(transcript);\n            const frontlower = front.toLowerCase()\n            if (transcript.includes(frontlower)) {\n              // setCount(0);\n              // setIndex(index + 1);\n              // setTimerStart(10);\n              // resetTranscript();\n              SpeechRecognition.stopListening();\n            } \n          };\n        \n          SpeechRecognition.onresult = resultHandler();\n          SpeechRecognition.onerror = () => resetTranscript();\n        }\n        \n        \n      //    const whateva = () => {\n      //     while (listening) {\n      //     handleSpeechRecognition()\n      //   }\n      // }\n      \n      // console.log(whateva)\n        const GameComponent = ({flashcard}) => {\n          // map through each card\n          // function in map taking in card\n          \n          \n          \n    if (count === 0){\n// i want to have the card displayed and it must be typed correctly to move on\n// with accent keyboard below the game\n    return (\n      <div>\n      {flashcard.front}\n      {flashcard.one_back}\n      <input onChange = {(e) => inputValueChanged(e)} type=\"text\" value = {input} autoFocus/>\n      </div>\n    )\n    \n  }\n  else if (count === 1) {\n    return (\n      <div>\n        <p>{flashcard.front }</p>\n        <p>{flashcard.one_back}</p>\n        {/* <button onClick={() => textSynthesis(flashcard.front)}>Again</button> */}\n      </div>\n    );\n  }\n  else if (count == 2) {\n    // SpeechRecognition.startListening()\n    handleSpeechRecognition(flashcard.front)\n    // whateva()\n    // handleSpeechRecognition()\n    return (\n      <div>\n          \n          <p>Repeat the front of the card:</p>\n          <p>{transcript}</p>\n          <p>{flashcard.front}</p>\n          {listening ? <img src= \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRXb04ZJC0pLpX-xTy0nKZXYGb2QJJEI2Wg5A&usqp=CAU\"  /> : <p> this isnt working i hate it here</p>}\n          {listening ? \"hate\" : \"love\"}\n          <p>i am losingggg it</p>\n        </div>\n      );\n    }\n  \n  }\n \n\n  return (\n    <div>\n           \n  <div key={index}>\n{ <GameComponent flashcard = {selectedSet[index].flashcard }/>}\n {/* if index is 11 return a next button or an exit button */}\n  </div>\n\n    </div>\n  );\n  \n}\n\nexport default FlashcardSet;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}