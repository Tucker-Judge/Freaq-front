{"ast":null,"code":"var _jsxFileName = \"/Users/tudge/Development/phase-5/freaq-front/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\n// import Login from './Components/Login';\nimport NavBar from './Components/Navbar';\n// import Home from './Components/Home';\nimport Footer from './Components/Footer';\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [languageApp, setLanguageApp] = useState(\"en-US\");\n  const [user, setUser] = useState(null);\n  // const [language]\n  // fetch user then set a language state to the primary language of the app\n\n  let userLang = navigator.language || navigator.userLanguage;\n  setLanguageApp(userLang);\n  useEffect(() => {\n    fetch(\"/show\").then(r => {\n      if (r.ok) {\n        r.json().then(user => setUser(user));\n      } else {\n        setUser(null);\n      }\n    });\n  }, []);\n  useEffect(() => {\n    fetch(\"/show\").then(r => {\n      if (r.ok) {\n        r.json().then(user => setUser(user));\n      } else {\n        setUser(null);\n      }\n    });\n  }, []);\n  const router = createBrowserRouter([{\n    path: \"/*\",\n    element: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"404 not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this)\n  },\n  // {\n  //   path:\"/login\",\n  //   element: <Login />\n  // },\n  {\n    path: \"/\",\n    // element: <Home user={user}/>\n    element: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loggedIn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this)\n  }\n  // {\n  //   path: \"/AddLanguages\",\n  //   element: <Languages />\n  // },\n  // {\n  //   path: \"/LanguagePicker\",\n  //   element: <LanguagePicker />\n  // }\n  ]);\n\n  //gets current language\n  //return whatever the route is on\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      languageApp: languageApp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"m0fqHwWGR6VA0IHglpQGsKCUdXc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["NavBar","Footer","createBrowserRouter","RouterProvider","useState","useEffect","jsxDEV","_jsxDEV","App","_s","languageApp","setLanguageApp","user","setUser","userLang","navigator","language","userLanguage","fetch","then","r","ok","json","router","path","element","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/tudge/Development/phase-5/freaq-front/src/App.js"],"sourcesContent":["import './App.css';\n// import Login from './Components/Login';\nimport NavBar from './Components/Navbar';\n// import Home from './Components/Home';\nimport Footer from './Components/Footer';\nimport {\n  createBrowserRouter,\n  RouterProvider,\n} from \"react-router-dom\";\nimport {useState, useEffect} from 'react';\n\nfunction App() {\n  const [languageApp, setLanguageApp] = useState(\"en-US\")\n  const [user, setUser] = useState(null)\n  // const [language]\n  // fetch user then set a language state to the primary language of the app\n  \n  let userLang = navigator.language \n  || navigator.userLanguage; \n  setLanguageApp(userLang)\n\n  useEffect(() => {\n    fetch(\"/show\")\n    .then((r) => {\n      if (r.ok) {\n        r.json().then((user) => setUser(user));\n      } else {\n        setUser(null)\n      }\n    });\n  },[]);\n  useEffect(() => {\n    fetch(\"/show\")\n    .then((r) => {\n      if (r.ok) {\n        r.json().then((user) => setUser(user));\n      } else {\n        setUser(null)\n      }\n    });\n  },[]);\n\n\n  const router = createBrowserRouter([\n  \n    {\n      path:\"/*\",\n      element: <h1>404 not found</h1>\n    },\n    // {\n    //   path:\"/login\",\n    //   element: <Login />\n    // },\n    {\n      path: \"/\",\n      // element: <Home user={user}/>\n      element: <h1>loggedIn</h1>\n    },\n    // {\n    //   path: \"/AddLanguages\",\n    //   element: <Languages />\n    // },\n      // {\n      //   path: \"/LanguagePicker\",\n      //   element: <LanguagePicker />\n      // }\n  ]);\n  \n  //gets current language\n  //return whatever the route is on\n  return (\n    <div className=\"App\">\n      <NavBar />\n      {/* {user ? (\n      // <h1>Logged In</h1> */}\n        <RouterProvider router={router} />\n      {/* ):(\n        <Login />\n        \n      )} */}\n      <div>\n       {/* { alert(\"The language is: \" + languageApp)} */}\n        </div>\n<Footer languageApp={languageApp}/>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB;AACA,OAAOA,MAAM,MAAM,qBAAqB;AACxC;AACA,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SACEC,mBAAmB,EACnBC,cAAc,QACT,kBAAkB;AACzB,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,OAAO,CAAC;EACvD,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC;EACA;;EAEA,IAAIU,QAAQ,GAAGC,SAAS,CAACC,QAAQ,IAC9BD,SAAS,CAACE,YAAY;EACzBN,cAAc,CAACG,QAAQ,CAAC;EAExBT,SAAS,CAAC,MAAM;IACda,KAAK,CAAC,OAAO,CAAC,CACbC,IAAI,CAAEC,CAAC,IAAK;MACX,IAAIA,CAAC,CAACC,EAAE,EAAE;QACRD,CAAC,CAACE,IAAI,EAAE,CAACH,IAAI,CAAEP,IAAI,IAAKC,OAAO,CAACD,IAAI,CAAC,CAAC;MACxC,CAAC,MAAM;QACLC,OAAO,CAAC,IAAI,CAAC;MACf;IACF,CAAC,CAAC;EACJ,CAAC,EAAC,EAAE,CAAC;EACLR,SAAS,CAAC,MAAM;IACda,KAAK,CAAC,OAAO,CAAC,CACbC,IAAI,CAAEC,CAAC,IAAK;MACX,IAAIA,CAAC,CAACC,EAAE,EAAE;QACRD,CAAC,CAACE,IAAI,EAAE,CAACH,IAAI,CAAEP,IAAI,IAAKC,OAAO,CAACD,IAAI,CAAC,CAAC;MACxC,CAAC,MAAM;QACLC,OAAO,CAAC,IAAI,CAAC;MACf;IACF,CAAC,CAAC;EACJ,CAAC,EAAC,EAAE,CAAC;EAGL,MAAMU,MAAM,GAAGrB,mBAAmB,CAAC,CAEjC;IACEsB,IAAI,EAAC,IAAI;IACTC,OAAO,eAAElB,OAAA;MAAAmB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC5B,CAAC;EACD;EACA;EACA;EACA;EACA;IACEN,IAAI,EAAE,GAAG;IACT;IACAC,OAAO,eAAElB,OAAA;MAAAmB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACvB;EACA;EACA;EACA;EACA;EACE;EACA;EACA;EACA;EAAA,CACH,CAAC;;EAEF;EACA;EACA,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAL,QAAA,gBAClBnB,OAAA,CAACP,MAAM;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAGRvB,OAAA,CAACJ,cAAc;MAACoB,MAAM,EAAEA;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAKpCvB,OAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEQ,eACdvB,OAAA,CAACN,MAAM;MAACS,WAAW,EAAEA;IAAY;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACzB;AAEV;AAACrB,EAAA,CA3EQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA6EZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}